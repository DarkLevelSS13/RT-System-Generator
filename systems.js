class System{
    constructor(){
		
		this.star            = [];
		this.star_desc 		 = [];
		this.features        = [];
		this.features_desc   = [];
		this.starGen(this.dX(10));
        this.featureGen();
        this.innerElements   = this.innerElemPop(this.systemElem(this.star), this.features);
        this.primaryElements = this.primaryElemPop(this.systemElem(this.star), this.features);
        this.outerElements   = this.outerElemPop(this.systemElem(this.star), this.features);
        
    }
    // Universal rolling function
    dX(number){
        const roll = Math.floor(Math.random()*number)+1
        return roll;
    }
    // Determines the system feature
    featureGen(){
		let rolltimes = Math.max(this.dX(5)-2, 1);
		let roll = 0;
		let prevrolls = [];
		for(let i = 0; i < rolltimes; i++){
			roll = this.dX(10);
			while ( prevrolls.includes(roll) || (roll == 9 && prevrolls.includes(10)) || (roll == 10 && prevrolls.includes(9))){
				roll = this.dX(10);
			}
			prevrolls.push(roll);
			switch(roll){
				case 1:
					this.features.push('Богатая');
					this.features_desc.push(
						'Система с этой системной особенностью благословлена изобилием редких и необычных материалов.\
						Формирование близлежащих звезд могло образоваться необычное количество\
						nэкзотических материалов, или Система могла стать насыщенной\
						такими ресурсами по мере того, как пролетающие метеоры и кометы становились\
						запертыми в своих гравитационных колодцах. Как бы это ни произошло, эта область\
						теперь является настоящим хранилищем минеральных сокровищ, ожидающих\
						чтобы их использовали во имя прибыли. Пригодные для жизни миры в такой системе\
						высоко ценятся как возможные места для колоний, хотя\
						Известны случаи, когда хорошо оснащенные Вольные Торговцы устанавливали\
						свои горнодобывающие операции на мирах, которые обычно не допускают поселения людей.\
						<br>При генерации этой системы ГМ должен применить один или несколько из следующих эффектов:\
						<br>- Добавить один пояс астероидов или скопление астероидов в любую одну Солнечную зону.\
						<br>- Когда исследователи приближаются к поясу астероидов или кластеру астероидов\
						в этой системе, бросьте 1d10. При результате 6 или выше, бросьте 1d5 дополнительных раз по\
						Таблице 1-20: Минеральные Ресурсы (см. стр. 29) для этого пояса астероидов или кластера.\
						<br>- Сделайте один дополнительный бросок по таблице 1-20: Минеральные ресурсы (см. стр. 29) для этого пояса или кластера астероидов.\
						Ресурсы при генерации планет в этой системе, определяют изобилие обычным образом.\
						<br>- Когда Исследователи приближаются к планете в этой Системе,\
						бросьте 1d10. При результате 7 или выше, эта планета имеет один\
						дополнительный ресурс "Экзотические материалы".'
					);
					break;
				case 2:
					this.features.push('Гравитационные приливы');
					this.features_desc.push(
						'В большинстве систем гравитационный прилив является постоянным и неизменным фактом Вселенной, более надежным, чем свет звезд на небе.\
						Однако в некоторых регионах космоса катаклизмические потрясения, вызванные действием определенных фундаментальных сил, приводят к тому,\
						что гравитационные поля перемешиваются, как море, охваченное штормом. Известны случаи, когда яростные гравитационные приливы разрывали на части корпуса пустотных кораблей,\
						слишком неосмотрительных, чтобы внять предупреждениям своих авгуров, а некоторые из самых страшных аномалий стали мрачными легендами среди опытных рулевых.\
						Рассказы о Невидимом рифе и Пасти Пустоты - основной предмет сплетен пустотников в Порте Блуждающих.\
						Некоторые приливы гравитации более мягкие и могут стать благом для экипажей, отчаянно нуждающихся в схождении к планетам, быстро неся суда по скрытым течениям в пространстве.\
						Эти потоки - ресурсы, которыми дорожат так же, как боятся пливов.\
						<br>При создании этой системы ГМ должен применить один из следующих эффектов:\
						<br>- Добавить в систему 1d5 гравитационных приливов. Эти особенности могут быть размещены в любой Солнечной зоне.\
						<br>- Гравитационные колодцы, окружающие планеты в этой системе, бурлят как водовороты, избивая орбитальные корабли своими колебаниями.\
						Для безопасного выхода на орбиту планеты, пустотному кораблю требуется пройти сложный (-10) тест на Пилотирования(Космического Корабля),\
						который приводит к потере 1 пункта целостности корпуса за каждые две степени провала.\
						Малые корабли могут входить и выходить из гравитационного колодца только после того, как пилот пройдет очень сложный (-30) тест Пилотирования(Воздушная Техника).\
						Каждый полный день, проведенный на орбите, требует дополнительной проверки пилота.\
						<br>- Путешествие между планетами в пределах этой системы занимает половину обычного времени.'
					);
					break;
				case 3:
					this.features.push('Теплица');
					this.features_desc.push(
						'Если верить рассказам типичного экипажа корабля-пустотника, находящегося в увольнении, можно было бы предположить, что все неисследованные территория в галактике делится на две простые категории.\
						Из кошмарных системы, в которые никто не вторгается, истории часто оказываются ближе к истине, чем это может показаться их рассказчикам.\
						Хотя нетронутые кольца идиллических райских миров вращающихся вокруг успокаивающих звезд, как правило, существуют только в рассказах пьяных пустотников, стойкость таких надежд нельзя полностью приписывать оптимизму.\
						В конце концов, особо удачливые корабли иногда попадают в системы, настолько полные пригодными для жизни мирами, что не поддается обычному пониманию.\
						Исследователи, которые делают такие находки, не всегда так удачливы, как они думают, поскольку обитатели таких миров зачастую тускло воспринимают идею о том,\
						что их дом принадлежит совершенно чужому человеку чужаку по праву божественного провидения, и часто имеют достаточно средств, чтобы выразить свое недовольство.\
						Даже нахождение такого рая пустотников в первозданном состоянии может привести к неприятностям, если об этом станет известно конкурентам.\
						Редкость таких находок делает кражу или завоевание более простым методом приобретения, чем открытия. Те капитаны, которым удается захватить, удержать и использовать свою находку,\
						неизбежно узнают свои имена вписанных в растущие легенды о Экспансии других миров.\
						<br>При создании этой системы ГМ должен применить один из следующих эффектов:\
						<br>- Добавить по одной планете в каждую Солнечную зону.\
						<br>- Планеты в пределах основной зоны системы, получают +1 к результату броска по Таблице 1-9: Атмосфера Присутствие атмосферы и +2 к результату броска по таблице 1-10: Состав атмосферы (см. стр. 21).\
						<br>- Планеты в этой системе добавляют +2 к результату любого броска, который они делают по таблице 1-12: Пригодность для жизни (см. стр. 23).'
					);
					break;
				case 4:
					this.features.push('Проклятая');
					this.features_desc.push(
						'Во всей галактике есть места, оскверненные невидимыми силами, не обнаруживаемыми лучшими сенсорами, которые могут создать Адептус Механикус,\
						непостижимыми для расчетов их лучших когитаторов и даже незаметными для варповскогих взоров навигаторов.\
						По какой-то причине некоторые регионы просто прокляты. Места, действительно несущие на себе отпечаток проклятия, встречаются крайне редко.\
						Однако на каждую такую непостижимую аномалию приходятся сотни скоплений,окутанных легендами и обстоятельствами, способными разрушить судьбу неподготовленного Вольного Торговца.\
						Некоторые из самых известных уголков Пространства мало кто понимает лучше, чем вечный мрак Далеких Трупных Звезд.\
						На протяжении многих поколений о них ходили страшные слухи, порожденные малейшей крупицей правды.\
						Целые экипажи взбунтовались, узнав, что им предстоит отправиться в Скопление Ноктис, Багровый лабиринт или Серебряные своды.\
						Несмотря на все это, все еще есть немало тех, кто достаточно безумен, чтобы отважиться на свет этих звезд в надежде получить огромные сокровища или заглушить их пагубное влияние светом Императора.\
						Некоторые такие попытки были предприняты просто из-за самолюбия успешного капитана, который не мог смириться с мыслью, что такое место для него закрыто.\
						<br>Примените следующее к системам с этой системной особенностью:\
						<br>- Любой корабль, впервые входящий в систему, теряет 1d5 боевого духа, если только один из исследователей не пройдет тест (+0) Обаяния или Запугивания.\
						Если природа и репутация Системы были известны экипажу заранее, сложность испытания и потеря морали за неудачу могут быть выше по усмотрению ГМ.\
						<br>- Все потери морали, понесенные в этой Системе, увеличиваются на 1, так как экипаж приписывает все несчастья, постигшие их, злой воле окружения.\
						Это не относится к морали, потерянной при первом входе в Систему (воображение даже самого боязливого жителя пустоты может придумать только столько ужасов!)\
						<br>- Любые проверки на страх, сделанные в Системе, делаются с дополнительным штрафом -10.\
						<br>Кроме того, если ГМ сочтет репутацию Проклятой системы в какой-то мере правдивой, он может применить один или несколько из следующих эффектов (или любые подходящие упыриные альтернативы):\
						<br>- Когда вы тратите Очко Судьбы в этой Системе, бросьте 1d10. Если выпадет 9, это не имеет никакого эффекта.\
						Если оно было потрачено для того, чтобы как-то изменить Испытание, оно считается единственным Очком Судьбы, которое может быть использовано для этого Испытания в обычном режиме, даже если оно не оказало никакого эффекта.\
						Исследователи, рожденные в Пустоте, восстанавливают потерянные таким образом Очки Судьбы (благодаря результату 9) обычным образом.\
						<br>- Все Испытания Силы Воли, проводимые в рамках этой Системы, проводятся со штрафом -10.\
						<br>- Каждый раз, когда Исследователь получает очки безумия, находясь в этой системе, он получает двойное количество очков безумия.\
						<br>- Попытка использовать психические техники из дисциплины "Дивинация" для получения информации о Системе или о чем-либо в ней требует от пользователя пройти Трудную (-10) проверку на страх,\
						прежде чем он сможет попытаться выполнить проверку на силу фокуса.'
					);
					break;
				case 5:
					this.features.push('Пиратская берлога');
					this.features_desc.push(
						'В этой области базируется мощный пиратский флот, возможно, использующий ее миры для добычи ресурсов или даже рабского труда.\
						Большинство таких флотов состоят из баз предателей и мошенников, подобных тем, что досаждают судоходству более цивилизованных регионов.\
						Некоторые из них - изгнанники из других цивилизаций в глубинах Пространства, другие могут быть флотилиями риверов Хаоса, эльдарскими армадами корсаров или ветхим приливом оркских вольных буянов.\
						Независимо от характера угрозы, такие рейдеры знают все тонкости и особенности каждой части Системы, и обычно сражаются до последнего, защищая свою территорию и добычу.\
						По умолчанию пиратское логово состоит из 1d5+4 рейдеров "Волчьей стаи" (см. стр. 209 Основного руководства ROGUE TRADER), разбросанных по всей Системе,\
						во главе с более грозным флагманом (обычно это хорошо вооруженный фрегат, но иногда в этой роли может оказаться исключительно мощный рейдер или даже легкий крейсер).\
						При создании пиратского логова бросьте 1d10, если выпадет 5 или выше, оно базируется вокруг космической станции (такой, как станция Wayfarer на стр. 210 Основных правил ROGUE TRADER).\
						Закаленные мародеры этих флотов имеют качество экипажа 40, а ветераны на борту флагманского корабля могут иметь еще более высокий рейтинг или ряд высококвалифицированных офицеров, возглавляющих их рейды.\
						ГМы, имеющие доступ к BATTLEFLEET KORONUS, могут использовать корабли орков, эльдар, ракголов или Хаоса в качестве альтернативных флотов. В Пиратском логове никогда не бывает меньше пяти кораблей, и редко бывает больше восьми.\
						Качество флотов ксеносов или еретиков часто превосходит возможности большинства отступников, обычно они включают в себя широкий спектр кораблей,\
						и часто среди них есть как минимум один корабль размера легкого крейсера или даже крейсера, который несет их флаг.\
						По усмотрению ГМа, пиратское логово может быть даже домом для печально известного пиратского капитана Джалты Меттиера и его флота (см. стр. 128)\
						или ужасного орка Каптина Граффлетца (см. стр. 133).'
					);
					break;
				case 6:
					this.features.push('Разрушенная империя');
					this.features_desc.push(
						'Остатки древних цивилизаций, как человеческих, так и инопланетных, разбросаны по просторам Коронуса.\
						Целые династии нажили свое состояние на разграблении Эгарианского доминиона или некогда гордых миров эльдар.\
						Другие были полностью уничтожены, когда нашли реликвию Юватхов в катакомбах, которые лучше было не трогать.\
						Самые желанные секреты Инженерных Орденов Зайта - лишь тени тех знаний, которыми когда-то владели жители этого мира.\
						И на каждый из этих примеров былой славы приходится дюжина миров, на которых стоят застывшие города цивилизации, еще не известной Империуму.\
						Многие из этих некогда гордых империй носят шрамы от разрушения в давно забытой войне, в то время как другие не оставили никаких видимых свидетельств своего конца.\
						<br>При создании этой системы ГМ должен применить один из следующих эффектов:\
						<br>- Добавить ресурс "Руины Ксеносов" на 1d5-1 (минимум 1) планет в этой системе.\
						Если в системе недостаточно планет, восполните разницу, добавив в систему оставшиеся руины в качестве кладбищ звездолетов или заброшенных станций.\
						<br>Увеличьте изобилие любых руин ксеносов на 1d10+5 (см. стр. 31).\
						<br>- Добавьте ресурс "Археотехнологический тайник" на 1d5-1 (минимум 1) планет в этой системе.\
						Если в системе недостаточно планет, восполните разницу, добавив в систему оставшиеся руины в качестве кладбищ звездолетов или заброшенных станций.\
						<br>Увеличьте изобилие любых тайников археотехнологий на 1d10+5 (см. стр. 28).'
					);
					break;
				case 7:
					this.features.push('Потерянное прошлое');
					this.features_desc.push(
						'Не все потерянные сокровища Пространства погребены за давно заброшенными стенами или скрыты под мраком древней гибели.\
						В ряде систем процветающие культуры выходят за пределы своих родных миров и устремляются к звездам, чтобы захватить ресурсы, по праву принадлежащие Империуму Человечества.\
						Когда такие зарождающиеся империи принадлежат человечеству, долг любого встреченного торговца-бродяги - научить их слову и воле Императора.\
						Те, кто принадлежит к расе ксеносов, должны быть уничтожены, прежде чем они смогут стать серьезной угрозой,\
						хотя некоторые Бродячие торговцы предпочитают переложить эту обязанность на других, которых они могут найти, и ищут более прибыльное предприятие.\
						<br>При создании этой Системы ГМ должен применить следующие эффекты:\
						<br>- Если после создания всех элементов системы в ней содержится менее четырех планет, ГМ должен добавить дополнительные планеты, пока в регионе не будет по крайней мере четыре планеты.\
						<br>- Общая цивилизация распространяется по 1d5+3 Системным Элементам в этой Системе. Это может быть либо неимперская человеческая нация, либо раса ранее неизвестных разумных ксеносов.\
						Во время процесса создания планеты в этой системе все планеты с местной цивилизацией автоматически заселяются соответствующим видом на уровне развития Voidfarers, Colony или Orbital Habitation, в зависимости от ситуации.\
						По крайней мере, одна планета имеет местное население на уровне развития Voidfarers. Любая пригодная для жизни планета, не заселенная звездолетами, генерирует жителей в обычном режиме.\
						Если в системе недостаточно планет, чтобы каждая колония звездолетчиков имела собственную планету, несколько обитаемых планет могут быть размещены на одних и тех же планетах, или на астероидах,\
						на кладбищах звездолетов, или на других системных объектах по усмотрению мастера игры.'
					);
					break;
				case 8:
					this.features.push('Звездная аномалия');
					this.features_desc.push(
						'Среди граждан Империи, которым предоставлена возможность рассматривать вопросы, выходящие за пределы их собственного мира, большинство знают некоторые основные принципы устройства пустоты.\
						Этим эрудированным людям известно, что все планеты вращаются вокруг звезды, которая является центром огромной системы других тел,\
						и что эти системы являются частью большой галактики, которая является частью судьбы всего человечества.\
						Они знают эти простые истины, потому что благородные и заслуживающие доверия чиновники Империума рассказали им об этом, прекрасно понимая,\
						что распространение знаний о всей сложности реальности приведет лишь к неприятностям.\
						Многие звездные системы по всей галактике сами находятся на орбите разнообразных причудливых явлений, имеющих мало общего, кроме своей невероятной массы и гравитации.\
						Некоторые орбитальные объекты давно знакомы человечеству, например, черные дыры и другие артефакты жизни и смерти звезд.\
						Другие известны только по неясным классификациям из темного века технологий, а многие существуют совершенно за пределами человеческого понимания.\
						Многие из наиболее известных и хорошо определенных подсекторов и звездных скоплений сосредоточены вокруг примечательного небесного объекта.\
						Эти объекты часто служат той же цели на астромантических картах и в тайных маршрутах Домов Навигаторов, что и земные ориентиры на карте поверхности.\
						<br>При генерации системы со звездной аномалией ГМ должен применить один из следующих эффектов:\
						<br>- Уменьшить количество генерируемых планет на 2, так как присутствие Звездной аномалии имеет тенденцию нарушать формирование любых тел меньше себя.\
						<br>Кроме того, все системы с этой ключевой особенностью имеют следующие эффекты:\
						<br>- Тесты Учённых Знаний(Астромантия) и Навигации(Звездная), проводимые для прокладки маршрутов через систему или для определения положения в ней, получают бонус +10.\
						<br>- Массивные силы, создаваемые звездной аномалией, иногда, кажется, стабилизируют местные маршруты искривления, хотя многие считают это суеверием пустотников,\
						и нет никаких записей о комментариях навигаторов по этому поводу.\
						Кораблям, путешествующим через Систему, необходимо совершать броски на столкновения с варп-путешествиями только каждые семь полных дней путешествия (или один раз, если путешествие длится менее семи дней).\
						Однако те же силы превращают необходимость периодических выходов в реальное пространство для корректировки курса в дополнительную опасность.\
						При любом результате удвоения при броске для встречи с варп-путешествием судно наталкивается на опасность в реальном пространстве, вместо того чтобы применить обычно получаемый результат.\
						Эффекты таких опасностей могут быть экстраполированы на аналогичные элементы системы, такие как гравитационные риптиды, радиационные всплески или солнечные вспышки.'
					);
					break;
				case 9:
					this.features.push('Варп Стазис');
					this.features_desc.push(
						'Все пустотники, достойные этого имени, знакомы с непредсказуемыми и зачастую смертельно опасными последствиями путешествий в Варпе и могут произнести всевозможные молитвы и суеверные заклинания, чтобы защитить себя от гнева бурлящих потоков.\
						Однако для некоторых из них, более утомленных, клаксоны и сирены напряженного Геллерова поля - это почти желанное зрелище по сравнению с мыслью о том, что они попадут в одну из "мелких" областей Моря Душ.\
						Путешествия через такие регионы часто приводят к тому, что корабль оказывается заторможенным в вялотекущем течении,\
						не может опуститься в реальное пространство из-за страха попасть внутрь звезды или черной дыры, и в равной степени не может продвинуться к системе, чтобы пополнить иссякающие запасы и хранилища.\
						Немного найдется судеб более ужасных, чем жизнь, проведенная в дрейфе в глубинах Искажения.\
						<br>При создании этой системы ГМ должен применить один из следующих эффектов:\
						<br>- Путешествие в Систему и из нее заторможено. Базовое время путешествия удваивается при входе или выходе из системы.\
						Время, необходимое для отправки астротелепатических сообщений в Систему или из нее, также удваивается. Кроме того, передача связного сообщения через ее границы требует невероятной сосредоточенности;\
						Астропаты получают штраф -3 к своему пси-рейтингу для целей отправки астротелепатических сообщений из этой Системы.\
						<br>В системах, которые полностью погружены в мантию, ГМ может применить один или несколько из следующих эффектов:\
						<br>- Тесты на силу фокуса и пси-навыки в этой системе делаются со штрафом -10.\
						<br>- Психические техники не могут быть использованы на Усиленном уровне в рамках Системы.\
						<br>- При броске по Таблице 6-2: Психические феномены (см. стр. 160 Основных правил ROGUE TRADER) в рамках этой Системы, бросьте дважды и используйте меньший результат.'
					);
					break;
				case 10:
					this.features.push('Варп Турбуленция');
					this.features_desc.push(
						'Многие навигаторы вздохнули с облегчением, преодолев Пасть, и только чтобы потом захлебнулись в ней, когда взору предстали бурлящие потоки самого Пространства.\
						Необузданные приливы и отливы за пределами великих штормов Варпа менее снисходительны, чем многие из хорошо изученных маршрутов Империума, и среди них много отмелей и рифов,\
						готовых разорвать на части вторгшуюся реальность любого проходящего мимо корабля пустоты.\
						К несчастью, в границах этих опасностей лежат избранные и ценные миры, и не один Вольный Торговец потерял свой корабль и свою жизнь, пытаясь захватить их.\
						Эти предостерегающие истории мало что дают тем, кто воодушевлен редким примером легендарных капитанов, вырвавших богатства из цепких рук Искажения.\
						<br>Все системы с этой ключевой особенностью имеют следующие эффекты:\
						<br>- Навигаторы получают штраф -10 к проверкам на Навигацию(Варп) для прыжков в Варп, которые начинаются или заканчиваются в этой системе.\
						<br>Кроме того, ГМ может применить одно или несколько из следующих действий:\
						<br>- Добавить +10 ко всем броскам по Таблице 6-2: Психические феноменов (см. стр. 160 Основного руководства ROGUE TRADER), сделанным в Системе.\
						<br>- Каждый раз, когда Исследователь получает Очки Порчи в Системе, увеличьте полученное количество на 1.\
						<br>- Добавьте +1 к пси-рейтингу любой пси-техники, используемой на уровнях Обычном или Усиленном.\
						<br>- Одна из планет Системы охвачена постоянным штормом варпа, делая ее недоступной для всех, кроме самых преданных (и безумных) путешественников.\
						<br>- Добавьте +10 ко всем броскам по Таблице 6-2: Психические феномено (см. стр. 160 Навигационных(Варп) тестов, сделанных в этой Системе, получают штраф -20 из-за сложности прокладки курса вокруг этой опасности.'
					);
					break;
					
			}
		}
    }
    // Determines the star type
    starGen(roll){
        if(roll==1){
			this.star_desc.push('Яростный свет этой звезды полностью доминирует в системе. Ее цвет, скорее всего, будет синим или сине-белым. Внутреннея зона доминирует, а Основная зона слаба.');
            this.star.push('Могучая');
        }else if(roll<=4){
			this.star_desc.push('Из сердца этой звезды исходит ровное сияние. Ее цвет, скорее всего, будет чисто белым.');
            this.star.push('Энергичная');
        }else if(roll<= 7){
			this.star_desc.push('Хотя прошло много веков с тех пор, как эта звезда сияла наиболее ярко, тем не менее, она всё ещё может обеспечивать постоянное свечение для системы. Скорее всего, она будет желтого или желто-оранжевого цвета. Внутреннея зона слаба.');
            this.star.push('Светящаяся');
        }else if(roll==8){
			this.star_desc.push('Конец жизни звезды неумолимо приближается, хотя она может гореть еще тысячелетия. Многие звезды этого типа имеют огромные размеры, казалось бы, несочетаемые с их слабым светом. Ее цвет, скорее всего, угрюмо-красный. Внешнея зона доминирует.');
            this.star.push('Тусклая');
        }else if(roll==9){
			this.star_desc.push('Эта звезда - неестественный выброс, излучающий странный свет, который ведет себя так, как не должена. Ее свет может быть любого цвета, даже такого, который не характерен для звезды, от желчно-зеленого до едва заметного фиолетового. Мастер игры может сделать одну Солнечную зону доминирующей или слабой по своему усмотрению.');
            this.star.push('Аномальная');
        }else if(roll==10){
            let number = this.dX(10);
            if (number < 7){
                let rolle = this.starGen(this.dX(9));
                this.starGen(rolle);
            }else {
				this.starGen(this.dX(9));
				this.starGen(this.dX(9));
            }
		return roll;
        }
    }
    // Determines the size of each solar zone
    systemElem(star){
        let innerCount = 0;
        let primCount = 0;
        let outCount = 0;
        if(star.includes('Могучая')){
            innerCount = this.dX(5)+2;
            primCount = Math.max(this.dX(5)-2, 1);
            outCount = this.dX(5);
        } else if(star.includes('Энергичная')){
            innerCount = this.dX(5);
            primCount = this.dX(5);
            outCount = this.dX(5);
        } else if(star.includes('Светящаяся')){
            innerCount = Math.max(this.dX(5)-2, 1);
            primCount = this.dX(5);
            outCount = this.dX(5);
        } else if(star.includes('Тусклая')){
            innerCount = this.dX(5);
            primCount = this.dX(5);
            outCount = this.dX(5)+2;
        } else {
            innerCount = this.dX(5);
            primCount = this.dX(5);
            outCount = this.dX(5);
        }
        return [innerCount, primCount, outCount]
    } 
    // The following 3 functions populate the solar zones
    innerElemPop(count){
        let innerElems = [];
        for(let i=0;i<count[0];i++){
			let randGen = this.innerGen(this.dX(100))
			if(randGen){
				innerElems.push(randGen);
			}
        } return innerElems;
    }
    primaryElemPop(count){
        let primaryElems = [];
        for(let i=0;i<count[1];i++){
			let randGen = this.primaryGen(this.dX(100))
			if(randGen){
				primaryElems.push(randGen);
			}
        } return primaryElems;
    }
    outerElemPop(count){
        let outerElems = [];
        for(let i=0;i<count[2];i++){
			let randGen = this.outerGen(this.dX(100))
			if(randGen){
				outerElems.push(randGen);
			}
        } return outerElems;
    }
    //the following 3 functions determine what populates the zones
    innerGen(initial){
        if(initial >= 89){
            return 'Солнечные вспышки';
        } else if(initial >= 77){
            return 'Радиационные всплески';
        } else if(initial >= 57){
            return new Planet('Внутренний', this.features);
        } else if(initial >= 46){
            return 'Гравитационный прилив'
        } else if(initial >= 42){
            return new GasGiant('Внутренний', this.features);
        } else if(initial >= 30){
            return 'Пылевое облако';
        } else if(initial >= 21){
            return 'Скопление астероидов';
        } else {
            return;
        }
    }
    
    primaryGen(initial){
        if(initial >= 94){
            return 'Кладбище звездных кораблей';
        } else if(initial >= 65){
            return new Planet('Основной', this.features);
        } else if(initial >= 59){
            return 'Гравитационный прилив';
        } else if(initial >= 48){
            return 'Пылевое облако'
        } else if(initial >= 42){
            return 'Заброшенная станция';
        } else if(initial >= 31){
            return 'Скопление астероидов';
        } else if(initial >= 21){
            return 'Пояс астероидов';
        } else {
            return;
        }
    }
    
    outerGen(initial){
        if(initial >= 94){
            return 'Кладбище звездных кораблей';
        } else if(initial >= 81){
            return new Planet('Внешний', this.features);
        } else if(initial >= 74){
            return 'Гравитационный прилив';
        } else if(initial >= 56){
            return new GasGiant('Внешний', this.features);
        } else if(initial >= 47){
            return 'Пылевое облако';
        } else if(initial >= 41){
            return 'Заброшенная станция'
        }else if(initial >= 30){
            return 'Скопление астероидов';
        } else if(initial >= 21){
            return 'Пояс астероидов';
        } else {
            return;
        }
    }
};
// Above generates a system, below modifies the system
function featureProperties(features){
	for(var lfeature in features){
		switch(lfeature){
			//Богатая
			case 'Богатая':
				let zonePlace = Math.floor(Math.random()*3)+1;
				if(zonePlace == 1){
					system.innerElements.push('Пояс астероидов');
					console.log(`Пояс астероидов обнаружен во внутреней системной зоне`);
				} else if(zonePlace == 2){
					system.primaryElements.push('Пояс астероидов');
					console.log(`Пояс астероидов обнаружен в основной системной зоне`);
				} else if(zonePlace == 3){
					system.outerElements.push('Пояс астероидов');
					console.log(`Пояс астероидов обнаружен во внешней системной зоне`);
				}
				break;
				//Add 1 Пояс астероидов/cluster to any 1 zone

			//Гравитационные приливы
			case 'Гравитационные приливы':
				let gravTides = Math.floor(Math.random()*5)+1;
				for(let i=0; i < gravTides; i++){
					const randZone = Math.floor(Math.random()*10)+1;
					if(randZone >= 7){
						console.log('Гравитационный прилив обнаружен во внешней системной зоне');
						system.outerElements.push('Гравитационный прилив');
					} else if(randZone >= 4){
						console.log('Гравитационный прилив обнаружен в основной системной зоне');
						system.primaryElements.push('Гравитационный прилив');
					} else {
						console.log('Гравитационный прилив обнаружен во внутреней системной зоне');
						system.innerElements.push('Гравитационный прилив');
					}
				}
				break;
				//Add 1d5 гравитационный приливs distributed to any zones

			//Теплица
			case 'Теплица':
				system.innerElements.push(new Planet('Внутренний', this.features));
				system.primaryElements.push(new Planet('Основной', this.features));
				system.outerElements.push(new Planet('Внешний', this.features));
				console.log('В этой системе обнаруженны планеты с пригодностью для жизни');
				break;
			

			//Проклятая
			case 'Проклятая':
				console.log('Обнаруженно повышение уровня гормонов кортизола и адреналина в экипаже на 20%')
				break;

			//Пиратская берлога
			case 'Пиратская берлога':
				console.log('Внимание!: Обнаруженно враждебные суда');
				break;

			//Разрушенная империя
			case 'Разрушенная империя':
				console.log('Замеченны неопазнаные структуры');
				break;

			//Потерянное прошлое
			case 'Потерянное прошлое':
				const allElements = system.innerElements.concat(system.outerElements, system.primaryElements);
				let planetCount = 0;
				for(let i=0; i<allElements.length; i++){
					if(typeof allElements[i] === 'object'){
						planetCount++;
					}  
				}
				if(planetCount < 4){
					for(let i=0; i< 4-planetCount; i++){
						let rand = Math.floor(Math.random()*3)+1;
						if(rand > 2){
							system.outerElements.push(new Planet('Внешний', this.features))
						} else if (rand > 1){
							system.primaryElements.push(new Planet('Основной', this.features))
						} else {
							system.innerElements.push(new Planet('Внутренний', this.features));
						}
					} 
				}  
				console.log('Внимание!: Обнаруженно сигнал');
				break;
				//minimum 4 planets

			//Звездная аномалия
			case 'Звездная аномалия':
				console.log('Внимание!: Звездный поток и светимость колеблются вне обычных ограничений');
				break;
				//Minus 2 Planets (Min = 0)

			//Варп Стазис
			case 'Варп Стазис':
				console.log('Внимание: Стабильность Варпа превышает ограничения');
				break;

			//Варп Турбуленция
			case 'Варп Турбуленция':
				console.log('Внимание: Нестабильность Варпа превышает ограничения');
				break;
		}
	}
}

class Planet{
    constructor(zone, feature){
        this.zone       = zone;
        this.feature    = feature;
		this.ptype		= 'Планеты';
		this.body_num	= 0;
        this.body       = this.bodyGen(this.dX(10));
        this.gravity    = this.gravGen(this.dX(10), this.body); 
        this.orbFeat    = this.orbFeatPop(this.orbFeatGen(this.dX(5), this.gravity), this.zone, this.feature); 
        this.atmoPres   = this.atmoPresGen(this.dX(10), this.zone, this.feature, this.gravity);
        this.atmoComp   = this.atmoCompGen(this.dX(10), this.zone, this.feature, this.atmoPres);
        this.climate    = this.climateGen(this.dX(10), this.zone, this.atmoPres);
        this.hab        = this.habGen(this.dX(10), this.feature, this.climate, this.atmoComp);
		this.landmasses = this.landGen(this.dX(10));
		this.territories= this.terrGen();
		this.resources	= this.resourceGen();
    }
    dX(number) {
        let roll = Math.floor(Math.random()*number)+1;
        return roll;
    }
    bodyGen(roll) {
        let body;
		this.body_num = roll;
        if (roll >= 9){
            body = 'Огромная';
        } else if (roll == 8){
            body = 'Большая и плотная'
        } else if (roll >= 5){
            body = 'Большая'
        }else if (roll == 4){
            body = 'Маленькая и плотная'
        }else if (roll >= 2){
            body = 'Маленькая'
        } else {
            body = 'Низкая масса'
        } return body;
    }
    gravGen(roll, body) {
        let mod = 0;
        if (body === 'Огромная'){
            mod = 4;
        } else if(body === 'Большая и плотная'){
            mod = 5;
        } else if(body === 'Маленькая'){
            mod = -5;
        } else if(body === 'Низкая масса'){
            mod = -7;
        }
        const gravRoll = roll + mod;
        let grav = '';
        if(gravRoll >= 9){
            grav = 'Высокая гравитация';
        } else if (gravRoll >= 3){
            grav = 'Нормальная гравитация';
        } else if (gravRoll <= 2){
            grav = 'Низкая гравитация'
        } return grav;
    }
    orbFeatGen(roll, grav){
        let orbFeats = 0;
        if (grav === 'Высокая гравитация'){
            orbFeats = Math.max(roll -1, 1);
        } else if(grav === 'Нормальная гравитация'){
            orbFeats = Math.max(roll -2, 1);
        } else if(grav === 'Низкая гравитация'){
            orbFeats = Math.max(roll -3, 1);
        } return orbFeats;
    }

    orbFeatPop(count, grav, zone, feature){
        let orbFeats = [];
        let mod = 0;
        if(grav === 'Высокая гравитация'){
            mod += 10;
        } else if(grav === 'Низкая гравитация'){
            mod -= 10;
        }
        for(let i = 0; i<count; i++){
            let roll = this.dX(100) + mod;
            if(roll > 90){
                orbFeats.push(new Moon(zone, feature, this.body_num));
            } else if (roll > 60){
                orbFeats.push('Малая Луна');
            } else if (roll > 45){
                orbFeats.push('Крупный астероид');
            } else {
                continue;
            }
        } return orbFeats;
    }
    // this begins where Zone and Features will be used to determine composition
    atmoPresGen(roll, zone, feature, grav){
        let atmo = '';
        let mod = 0;
        if(feature === 'Теплица' && zone === 'Основной'){
            mod += 1;
        }
        if(grav === 'Высокая гравитация'){
            mod += 1;
        }else if(grav === 'Низкая гравитация'){
            mod -= 2;
        }
        const atmoRoll = roll + mod;
        if(atmoRoll >9){
            atmo = 'Тяжелая';
        } else if (atmoRoll >4){
            atmo = 'Умеренная';
        } else if (atmoRoll >1){
            atmo = 'Тонкая';
        } else {
            atmo = 'Нету'
        } return atmo;
    }
    atmoCompGen(roll, zone, feature, atmo){
        let atmoComp = '';
        if(zone === 'Основной' && feature === 'Теплица'){
            roll +=2;
        }
        if(atmo === 'Нету'){
            roll = 0;
        }
        if(roll > 7){
            atmoComp = 'Чистая';
        } else if(roll > 4){
            atmoComp = 'Испорченная';
        } else if(roll > 2) {
            atmoComp = 'Токсичная';
        } else if(roll > 1){
            atmoComp = 'Коррозионная';
        } else if(roll == 1) {
            atmoComp = 'Смертельная';
        } else {
            atmoComp = 'Отсутствует атмосфера'
        } return atmoComp;
    }
    climateGen(roll, zone, atmo){
        let climate = '';
		
        //Determining climate with atmo by solar zone
        if(zone === 'Внутренний'){
            roll -= 6;
        }
        if(zone === 'Внешний'){
            roll += 6;
        }
        //Generally determining climate
        if(roll > 10) {
            climate = 'Ледяной мир';
        } else if(roll > 7) {
            climate = 'Холодный мир';
        } else if(roll > 3){
            climate = 'Мир с умеренным климатом';
        } else if(roll > 0) {
            climate = 'Горячий мир'
        } else {
            climate = 'Пылающий мир'
        }
        return climate;
    }
    habGen(roll, feature, climate, atmo){
        let hab = '';
        let mod = 0;
        if(feature == 'Теплица'){
            mod +2;
        }
		if (atmo !== 'Чистая' && atmo !== 'Испорченная'){
            hab = 'Не пригодна для жизни';
        } else {
            if(climate === 'Пылающий мир' || climate === 'Ледяной мир'){
                mod -= 7;
            } else if(climate === 'Горячий мир' || climate === 'Холодный мир'){
                mod -= 2;
			}

            let num = roll + mod;
			if((climate === 'Пылающий мир' || climate === 'Ледяной мир') && num > 3){
				num = 3;
			}
            if(num > 7){
                hab = 'Зеленая';
            } else if (num > 5){
                hab = 'Ограниченная экосистема';
            } else if (num > 3){
                hab = 'Только Вода';
            } else if(num > 1){
                hab = 'Подземные реки';
            } else {
                hab = 'Не пригодна для жизни';
            }
        }
        return hab;
    }
	landGen(roll){
		let targNum = 8;
		if(this.hab === 'Только Вода' || this.hab === 'Ограниченная экосистема' || this.hab === 'Зеленая'){
			targNum = 4;
		}
		if(roll >= targNum){
			return this.dX(5);
		}
		return 1;
	}
	terrGen(){
		let hab = this.hab;
		let body = this.body;
		let mod = 0;
		if(hab !== 'Ограниченная экосистема' && hab !== 'Зеленая'){
			return 'Нет Особых Территорий';
		} else if(hab === 'Зеленая'){
			mod += 2
		}
		switch(body){
			case 'Маленькая': case 'Низкая масса': case 'Маленькая и плотная':
				mod -= 2
				break;
			case 'Огромная':
				mod += 3
				break;
		}
		let elemNum = Math.max(this.dX(5) + mod, 1);
		let terrs = [];
		for(let i = 0; i < elemNum; i++){
			terrs.push(new Territories());
		}
		return terrs;
	}
	resourceGen(){
		let br_roll = 0;
		let ar_roll = 0;
		let resources_array = [];
		switch(this.body){
			case 'Маленькая': case 'Низкая масса': case 'Маленькая и плотная':
				br_roll = Math.max(this.dX(5) - 2, 0);
				ar_roll = Math.max(this.dX(5) - 3, 0);
				break;
			case 'Большая': case 'Большая и плотная':
				br_roll = this.dX(5);
				ar_roll = Math.max(this.dX(5) - 2, 0);
				break;
			case 'Огромная':
				br_roll = this.dX(10);
				ar_roll = Math.max(this.dX(5) - 1, 0);
				break;
		}
		if(br_roll == 0 && ar_roll == 0){
			return 'Отсуствуют';
		}
		if(br_roll > 0){
			for(let i = 0; i < br_roll; i++){
				resources_array.push(new Resource(this.body, 'Минералы', this.hab));
			}
		}
		if(ar_roll > 0){
			for(let i = 0; i < ar_roll; i++){
				resources_array.push(new Resource(this.body, 0,this.hab));
			}
		}
		return resources_array;
	}
	
}

class Resource{
	constructor(p_body, resource = 0, hab){
		this.planet_body	= p_body;
		this.resource_arch	= '';
		this.resource		= '';
		this.resource_desc	= '';
		this.resourceGen(resource, hab);
		this.abundance_name	= '';
		this.abundance_desc	= '';
		this.abundance		= this.abundanceGen();
    }
	dX(number) {
        let roll = Math.floor(Math.random()*number)+1;
        return roll;
    }
	abundanceGen(){
		let mod = 0;
		if((this.planet_body == 'Маленькая и плотная' || this.planet_body == 'Большая и плотная') && this.resource_arch == 'Минералы'){
			mod += 10; 
		}
		let roll = this.dX(100) + mod;
		if(this.planet_body == 'Низкая масса' && roll > 40){
			roll = 40;
		}
		
		if(roll > 98){
			this.abundance_name	= 'Изобильные';
			this.abundance_desc	= 'Запасы этого ресурса кажутся безграничными. Хотя залежи этого ресурса уже исчерпывались Империумом ранее, потребуется не менее десяти лет, чтобы истощить этот ресурс, если не предпринимать самых агрессивных усилий.';	
		}else if(roll > 85){
			this.abundance_name	= 'Крупные';
			this.abundance_desc	= 'Потенциальная ценность ресурса огромна, как в качестве непосредственного товара, так и в качестве долгосрочного резерва. К сожалению, для надлежащего использования этого потенциала, вероятно, потребуются значительные инвестиции, и существует достаточно предложения, чтобы стимулировать конкуренцию.';
		}else if(roll > 65){
			this.abundance_name	= 'Существенные';
			this.abundance_desc	= 'Ресурс одновременно богат и доступен, что позволяет применять самые разные подходы к его использованию.';
		}else if(roll > 40){
			this.abundance_name	= 'Измеримые';
			this.abundance_desc	= 'Существуют значительные резервы для того, чтобы ресурс оставался жизнеспособным источником дохода в течение некоторого времени.';
		}else if(roll > 15){
			this.abundance_name	= 'Ограниченные';
			this.abundance_desc	= 'Имеется скромный, но достойный запас этого ресурса, и устойчивое предприятие может сосредоточиться на эксплуатации только этого ресурса в течение нескольких лет, прежде чем возникнет необходимость в поиске других источников дохода.';
		}else{
			this.abundance_name	= 'Минимальные';
			this.abundance_desc	= 'Имеются следовые количества рассматриваемого ресурса, но их недостаточно для поддержания постоянной добычи, например, специальной шахтерской колонии. Краткосрочные операции, скорее всего, принесут наилучшую прибыль от инвестиций.';
		}
		return roll;
	}
	resourceGen(forced_resource, hab){
		let picked_arch = this.arch_resourceTable(this.dX(10));
		
		if(forced_resource){
			picked_arch = forced_resource;
		}else if(hab == 'Не пригодна для жизни' && picked_arch == 'Органическое Соединение'){
			do{
				picked_arch = this.arch_resourceTable(this.dX(10));
			}while(picked_arch == 'Органическое Соединение');
		}
		
		switch(picked_arch){
			case 'Руины Ксеносов':
				this.xenoruinsTabel();
				break;
			case 'Органическое Соединение':
				this.organicTabel();
				break;
			case 'Минералы':
				this.mineralsTabel();
				break;
			case 'Остатки Археотеха':
				this.resource = picked_arch;
				this.resource_desc = 'Тайники археотехнологий практически никогда не представляют собой единую гигантскую кучу чудесных сокровищ из Темного века технологий;\
				вместо этого данный ресурс обычно означает, что мир засеян этими сокровищами и ждет, когда предприимчивые исследователи обнаружат их.\
				Тайники археотехнологий генерируют Изобилие как обычно (см. стр. 26-27). Каждый раз, когда Исследователи встречают конкретное проявление большего Археотехнологического тайника\
				(небольшое количество предметов, спрятанных, потерянных или иным образом скрытых от предыдущих падальщиков), они генерируют 1d5+1 предметов\
				(автоматически выбирая "Археотех" в Таблице 2 30: Происхождение на странице 85) с помощью Генератора сокровищ (см. страницу 83).\
				Каждый обнаруженный предмет уменьшает общее изобилие археотехнологического тайника на 2, а каждый компонент корабля - на 10.\
				Если колония настроена на сбор археотехнологического тайника, она истощает его в обычном режиме, предположительно продавая любые находки для получения фактора прибыли.\
				Однако Адептус Механикус часто претендует на такие находки как на свои собственные.\
				Если Мастер игры пожелает, он может заставить Магос-Коммодора Траннарха появиться с Исследовательским флотом KX557.V и потребовать,\
				чтобы колония передала свои находки Адептусу Механикус (см. стр. 125). В этом случае исследователи должны провести деликатные переговоры, чтобы найти компромисс,\
				чтобы исследовательский флот просто не забрал то, что он считает своей потерянной собственностью, и не ушел, оставив колонию в руинах, а династию еще беднее.';
				break;
		}
		this.resource_arch = picked_arch;
		return;
		
	}
	arch_resourceTable(roll){
		if(roll > 8){
			return 'Руины Ксеносов';
		}else if(roll > 6){
			return 'Органическое Соединение';
		}else if(roll > 2){
			return 'Минералы';
		}else{
			return 'Остатки Археотеха';
		}
	}
	xenoruinsTabel(){
		let roll = this.dX(10);
		switch(roll){
			case 10:
				this.resource = 'Руины Крутов';
				break;
			case 9:
				this.resource = 'Руины Орков';
				break;
			case 8:
				this.resource = 'Руины Юват';
				break;
			case 7:
				this.resource = 'Руины РакГол';
				break;
			case 6: case 5:
				this.resource = 'Руины Эльдар';
				break;
			default:
				this.resource = 'Руины неизвестных ксеносов';
				break;
		}
		this.resource_desc = 'Большинство Руин Ксеносов представляют собой последние образцы мелких цивилизаций, но в Пространстве также есть места, которые когда-то были частью огромных империй.\
		При создании Руин Ксеносов сделайте бросок по Таблице 1-22: Руины Ксеносов, чтобы определить, какой вид построил их.\
		Исследователи могут идентифицировать руины с помощью Сложного (-20) теста Ремесла(Археология) или теста (+0) Запретного знания(Ксенос)";\
		если исследователь провалит это испытание, просто сделайте повторный бросок по таблице 1-22: Руины Ксеноса в тайне и дайте исследователю этот (неверный) результат.\
		Большинство руин обветшало, и осталось лишь несколько сокровищ, которые стоит взять.\
		Руины ЮВат не подвержены такой деградации, хотя проникающие в них исследователи часто сталкиваются с тем, что их собственная прочность подвергается испытанию.\
		Руины ксеносов можно добывать для Добычи как обычный ресурс. Однако колонии, исследующие руины, особенно зловещих руин ксеносов (в первую очередь с руин ЮВат),\
		теряют 1 Самообладание и Порядок в конце каждого 90-дневного цикла, в котором они собирают этот ресурс (см. стр. 102-103).\
		Если одна из характеристик колонии падает до 0 или ниже, колония впадает в безумие и резню.';
		return;
	}
	organicTabel(){
		let roll = this.dX(10);
		if(roll == 10){
			this.resource = 'Экзотическое соединение';
			this.resource_desc = 'Жизнь в Пространстве может проявлять множество странных, а иногда и неестественных свойств.\
			Такие причудливые эффекты нелегко понять, а тем более классифицировать, но немногие Вольные Торговцы позволяют таким трудностям помешать их прибыли.\
			Такие диковинки, как букеты поющих цветов, резные ящики из несокрушимого дерева и экзотические боевые наркотики, позволяющие совершать невероятные подвиги,\
			можно было найти на рынках Футфолла и Порт-Вандера. Несмотря на успехи, распространены и поучительные истории о тех, чьи амбиции превысили их благоразумие.\
			Говорят, что торговка-бродяга Вивиан ДеМорза изготовила из местной растительности филтер, соответствующий действию наркотика полиморфина,\
			который она намеревалась распространить среди агентов своей династии. Если такой препарат существовал, он мог стать одним из факторов ее убийства,\
			хотя все подозреваемые представители соперничающих династий упорно отрицали свою осведомленность или причастность. Истина в этом вопросе, к сожалению,\
			была потеряна в таинственном пожаре, который охватил архивы и трюмы ее корабля, сжигая ее записи, манифесты, груз и даже надежно хранившийся торговый ордер, отправленный ее преемнику.';	
		}else if(roll > 6){
			this.resource = 'Яркие аксессуары';
			this.resource_desc = 'Дворяне сектора Каликсиды и за его пределами постоянно ищут новые экзотические наряды,\
			чтобы произвести впечатление на своих покровителей и одержать верх над соперниками.\
			В последние столетия стало обычным делом использовать в таких нарядах элементы из экзотических зверей Простора Коронуса.\
			В некоторых модах в украшениях используются рог, кость или слоновая кость, в других - особенно яркие шкурки и меха. Некоторые из самых дорогих красителей,\
			используемых ткачами, обслуживающими элиту Каликсиды, имеют цвета экзотических инопланетных цветов. Для Вольного Торговца, заинтересованного в поставках на этот рынок,\
			начать новую моду может быть проще простого, всего лишь нужно заметить необычно окрашенное существо или цветок. Некоторые специалисты обслуживают более требовательных клиентов, собирая только образцы,\
			столь же опасные, сколь и впечатляющие. Но большинство покупателей довольствуются тем, что у них есть возможность почувствовать притягательность далеких просторов.';
		}else if(roll > 4){
			this.resource = 'Токсины';
			this.resource_desc = 'Всевозможные яды и отравляющие вещества встречаются на Просторе с удручающей регулярностью, даже в редких средах, казалось бы,\
			благоприятных для человеческой физиологии. Несмотря на очевидную неприятность, такое изобилие смертельных токсинов может быть превращено в ценный актив для Вольных Торговцев,\
			желающих иметь дело с менее пикантными рынками. Законных рынков сбыта ядов очень мало, и большинство из них - это агентства, которые многие бродячие торговцы считают не менее опасными,\
			чем настоящие преступные синдикаты. Тем не менее, прибыль, которую можно получить от продажи уникального токсина, может быть невероятной, особенно пока он остается неизвестным для тех,\
			кто может защитить от него или разработать противоядие. Недавно в тавернах Футфолла рассказывали, что неизвестный Вольный Торговец получил дорогое поместье Улья Примус на Сцинтилле в оплату\
			за одну дозу яда, неизвестного дегустаторам, таможенникам и врачам, окружавшим предполагаемую цель. Источник и природа данного ресурса токсинов в значительной степени зависит от ГМ,\
			хотя найти или добыть его не должно быть сложнее, чем любой другой ресурс с аналогичным изобилием. Хотя ряд смертельных ядов можно найти, собирая ядовитые мешочки неуловимых ксено-зверей,\
			ресурс токсинов чаще всего берется из растительной жизни или существ, слишком медлительных, чтобы отпугнуть хищников. Персонаж, подвергшийся воздействию типичного токсина в его сыром виде,\
			должен пройти тест на Выносливость (+0) или получить 1d10 ран, игнорируя броню и бонус выносливости. Требования для такого воздействия могут быть разными,\
			хотя наиболее распространенными факторами являются ранение или проглатывание. Большинство токсинов можно очистить, чтобы увеличить сложность проверки на стойкость или\
			количество наносимого ядом урона, а некоторые разновидности более или менее опасны в своем базовом состоянии.';
		}else if(roll > 2){
			this.resource = 'Соединение Ювената';
			this.resource_desc = 'В Империуме существует ряд процедур и препаратов для продления жизни и молодости, которые в совокупности называются ювенатскими.\
			Многие из них требуют применения хитроумных техник и устройств, предоставляемых за огромные деньги Адептус Механикус, другие же включают в себя инъекции,\
			мази и эликсиры, получаемые от различных видов по всей галактике. Такие методы лечения отличаются по эффективности и иногда ограничены в применении,\
			если у субъекта вырабатывается толерантность к препарату, но всегда находились те, кто готов заплатить целое состояние даже за один дополнительный год жизни.\
			Соединения ювената перед использованием должны быть обработаны на соответствующем предприятии, а в сыром виде они обычно токсичны или опасны.\
			К счастью, для выявления потенциала большинства сырых соединений ювената требуется лишь базовый анализ. Предприятия, специализирующиеся на создании таких препаратов, встречаются редко,\
			на весь сектор Каликсиды их всего несколько. Поставщикам всегда рады как на таких предприятиях, так и на менее законных, которые время от времени возникают для снабжения черного рынка.';
		}else{
			this.resource = 'Лечебные';
			this.resource_desc = 'Восстановительные свойства некоторых видов, встречающихся в Пространстве, породили множество неправдоподобных легенд.\
			Применение трав, грибов и даже крови некоторых существ спасло жизнь многим исследователям. Полагаться на эти средства в сыром виде безрассудно,\
			так как они часто имеют скрытую стоимость или становятся жизнеспособными только тогда, когда лечебное средство заранее подготовлено должным образом.\
			Большинство Вольных Торговцев предпочитают продавать такие находки тем, кто обладает знаниями для их правильной обработки, например, Магосам-биологисам, орденам госпитальеров,\
			а также исключительно богатым и хорошо обученным врачам, состоящим на службе у знатных домов. Попытка применить лечебное средство, не предприняв должных мер по его подготовке,\
			налагает штраф -40 на тесты Медики. В таких поспешных случаях эффект успеха должен быть незначительным (восстановление 1d5 утраченных ран или снятие 1-го критического повреждения),\
			и даже может нанести очки порчи или безумия в дополнение к полезным эффектам. Процесс, необходимый для подготовки лечебного средства к правильному применению, зависит от ГМ,\
			но обычно требует наличия средств, которые нелегко найти в Пространстве.';
		}
		return;
	}
	mineralsTabel(){
		let roll = this.dX(10);
		if(roll == 10){
			this.resource = 'Экзотические минералы';
			this.resource_desc = 'Самые редкие минеральные ресурсы не составляют категорию сами по себе, а лишь определяют конкретное отсутствие таковой.\
			Некоторые такие материалы считались бы основными в имперском производстве, если бы не их редкость. К ним относятся гиперплотная руда, из которой получают адамантий,\
			или некоторые элементы, используемые в производстве и переработке высококачественного керамита и прометия.\
			Другие представляют собой не более чем самые экстремальные примеры поделочных материалов, например, драгоценные камни или кристаллы, уникальные для пещер одного мира.\
			Кроме того, на просторах Пространства можно найти самые разные вещества, которые просто не поддаются классификации: от холодного жидкого золота,\
			добываемого из бассейнов на одном из миров Проклятой Деменции, до полуматериальных мерцающих кристаллов, к которым может прикоснуться только живая плоть.\
			Будь то декадентское любопытство, арканная тайна или жизненно важный ресурс, месторождения Экзотических материалов - исключительно ценные ресурсы.\
			ГМы должны рассмотреть возможность разрешить использовать ресурс Экзотического материала так, как будто он обладает дополнительной степенью Изобилия,\
			особенно если Исследователи способны придумать особенно амбициозное применение для месторождения.';	
		}else if(roll > 7){
			this.resource = 'Радиоактивные минералы';
			this.resource_desc = 'Спрос на радиоактивные материалы может быть крайне ограничен, поскольку большинство технологий,\
			использующих их свойства, устарели задолго до Великого крестового похода. Инфраструктура Империума такова, какова она есть,\
			и Вольные Торговцы могут найти миры, которые не продвинулись дальше примитивных ядерных печей, но такие общества редко способны предложить необходимую компенсацию за поставки.\
			Вместо этого торговля радиоактивными веществами ведется почти исключительно с малоизвестными ветвями Адептус Механикус, известными особо заумными или эзотерическими практиками.\
			Учитывая деликатный характер тайн Бога Машин, найти такие группы бывает крайне сложно, а те Вольные Торговцы, которым это удается, очень редко имеют представление о целях,\
			на которые идут их грузы. Учитывая невероятные цены, которые Магос может быть готов заплатить за регулярные (но незаметные) поставки даже самых ограниченных грузов,\
			мало кто склонен спрашивать об этом. Тем, кто все же поднимает этот вопрос, обычно угрожают расторжением контракта на поставку или даже отлучением от благосклонности Омниссии,\
			но более тонкие переговоры - это редко обсуждаемый источник большинства новых атомиков.';
		}else if(roll > 4){
			this.resource = 'Декоративные минералы';
			this.resource_desc = 'Некоторые минералы ценятся не за практическое применение, а за впечатляющую красоту и блеск, или даже просто за то, что их трудно приобрести.\
			Хотя мануфактуры иногда находят применение таким материалам, наиболее распространенным рынком сбыта драгоценных металлов,\
			драгоценных камней и других декоративных минералов всегда была аристократия Империума. Редкость и дороговизна золота, крукс-гемов и других поделочных камней используется для того,\
			чтобы заявить о могуществе и влиянии их носителя. Такие заявления также были обращены в более благородные цели, чем тщеславие, некоторыми кардиналами в Экклезиархии,\
			которые стремятся возвеличить величие Его на Земле в прекрасных мраморных храмах, с позолоченными алтарями и витражами из тончайшего хрусталя.\
			Хотя только наименее ценные и востребованные минералы такого рода можно найти с какой-либо регулярностью,\
			огромное разнообразие известных драгоценных и полудрагоценных металлов и камней делает поиски чего-то подобного простой задачей.\
			Однако найти покупателей, обладающих достатком и интересом, чтобы сделать данный груз стоящим, иногда может оказаться более сложной задачей, чем его приобретение.';
		}else{
			this.resource = 'Промышленные металлы';
			this.resource_desc = 'Среди материалов, наиболее высоко ценимых в Империуме, есть ряд часто встречающихся металлов, таких как железо, медь или свинец.\
			Особого внимания заслуживает железо, запасы которого почти во всех торговых домах сектора одновременно изобилуют и не соответствуют спросу.\
			Причину такой парадоксальной ценности можно найти в постоянно вращающихся шестеренках имперской военной машины,\
			которой требуется огромное количество этих металлов для миллиардов единиц оружия и транспортных средств, которые она производит каждый день.\
			Эта ненасытная потребность в сырье привела многие новообразованные династии к известности, и даже самый высокомерный патриарх знает, что не стоит пренебрегать прибылью,\
			которую приносят такие усилия. Хотя трюму, полному промышленных металлов, рады почти в любом порту,\
			хитрые Вольные Торговцы предпочитают заключать контракты на поставку с такими агентствами, как Департамент Муниторум, или с мощными кузнечными мирами и верфями.\
			Помимо поддержания стабильной прибыли, такие связи позволяют получить поддержку, которую иначе невозможно купить.';
		}
		return;
	}
}

class Territories{
	constructor(){
		this.baseTerrain		= this.baseGen();
		this.terFeatures_desc	= [];
		this.terFeatures		= [];
		this.doubleFeat			= false;
		this.featGen();
    }
    dX(number) {
        let roll = Math.floor(Math.random()*number)+1;
        return roll;
    }
	baseGen(){
		let roll = this.dX(5);
		switch(roll){
			case 1:
				return 'Лес';
			case 2:
				return 'Горный Хребет';
			case 3:
				return 'Равнина';
			case 4:
				return 'Болото';
			case 5:
				return 'Пустошь';
		}
	}
	featGen(){
		let elemNum = Math.max(this.dX(5) - 2, 1);
		for(let i = 0; i < elemNum; i++){
			switch(this.baseTerrain){
				case 'Лес':
					this.forestTable();
					break;
				case 'Горный Хребет':
					this.mountTable();
					break;
				case 'Равнина':
					this.plainsTable();
					break;
				case 'Болото':
					this.swampTable();
					break;
				case 'Пустошь':
					this.wastelandTable();
					break;
			}
		}
		return;
	}
	forestTable(){
		let feature;
		let feature_desc;
		let roll = 0;
		do{
			roll = this.doubleFeat ? this.dX(95) : this.dX(100);
			if(roll > 95){
				this.doubleFeat = true;
				this.forestTable();
				this.forestTable();
				return;
			}else if(roll > 80){
				feature = 'Необычайное местоположение';
				feature_desc = 'В большинстве случаев территории располагаются там, где местные условия с наибольшей вероятностью создадут соответствующий базовый рельеф.\
				Леса редко встречаются в замерзших полярных регионах, и даже самые опытные исследователи считают необычным найти Пустошь, окруженную зеленеющими полями.\
				По какой-то причине эти общие правила не применяются к этой территории, которая существует там, где ей не место, и, возможно, не должна существовать.';
			}else if(roll > 65){
				feature = 'Уникальное соединение';
				feature_desc = 'Штамм местной флоры, который можно найти только в этой территории, содержит вещество большой ценности.\
				На планете есть дополнительный ресурс Органических соединений, предоставленный этими растениями.\
				Его точная природа и изобилие ресурсов генерируются как обычно (см. раздел Ресурсы на стр. 27).';
			}else if(roll > 40){
				feature = 'Примечательные виды';
				feature_desc = 'Один из наиболее примечательных местных видов живности планеты встречается только на этой территории.\
				Создайте новый вид для этой цели, используя правила, представленные ниже.\
				В некоторых случаях этот признак может указывать на наличие необычной, местной разновидности более распространенного вида.\
				Такие экземпляры обычно резко отличаются от других особей окраской, темпераментом или телосложением и могут иметь особые приспособления для лучшего использования территории,\
				на которой они обитают. Эти изменения могут быть более выраженными, чем региональные различия.\
				По усмотрению ГМа этот вид может стать источником одного из ресурсов органических соединений планеты.';
			}else if(roll > 25){
				feature = 'Экстремальная температура';
				feature_desc = 'На этой территории царит экстремальная жара или холод.\
				Если планета уже имеет склонность к одной из крайностей, то эта черта накладывает дополнительный штраф -10 к проверкам на Выносливость, чтобы противостоять стихии.\
				В противном случае, чтобы противостоять экстремальным температурам на территории, необходимо пройти проверку на Выносливость (+0),\
				используя правила из раздела "Справиться с экстремальными температурами" на стр. 23. Кроме того, на территории может быть экстремальная температура, противоположная той,\
				которая характерна для остальной части планеты, например, вулканы на ледяном мире. В этом случае проверки на сопротивление типичному влиянию планеты делаются с бонусом +10,\
				пока исследователи находятся в зоне воздействия.';
			}else if(roll > 5){
				feature = 'Обширная';
				feature_desc = 'Границы этой территории значительно расширены по сравнению с типичными примерами такого типа.\
				Хотя точный размер любой территории зависит от усмотрения ГМ, территория с этим признаком обычно в два раза или более превышает размеры аналогичных регионов на данной планете.';
			}else{
				feature = 'Экзотическая природа';
				feature_desc = 'Флора, составляющая типичный лес, заменяется чем-то более причудливым.\
				Основой этой территории могут быть рощи из кристаллов, шпили из хитина или кости, или даже странные спящие курганы сочащейся плоти.\
				По усмотрению ГМа, прохождение может потребовать прохождения проверки на Страх против рейтинга страха 0 (тревожный).';
			}
		}while(this.terFeatures.includes(feature));
		this.terFeatures.push(feature);
		this.terFeatures_desc.push(feature_desc);
		return;	
	}
	mountTable(){
		let feature;
		let feature_desc;
		let roll = 0;
		do{
			roll = this.doubleFeat ? this.dX(95) : this.dX(100);
			if(roll > 95){
				this.doubleFeat = true;
				this.mountTable();
				this.mountTable();
				return;
			}else if(roll > 85){
				feature = 'Необычайное местоположение';
				feature_desc = 'В большинстве случаев территории располагаются там, где местные условия с наибольшей вероятностью создадут соответствующий базовый рельеф.\
				Леса редко встречаются в замерзших полярных регионах, и даже самые опытные исследователи считают необычным найти Пустошь, окруженную зеленеющими полями.\
				По какой-то причине эти общие правила не применяются к этой территории, которая существует там, где ей не место, и, возможно, не должна существовать.';
			}else if(roll > 75){
				feature = 'Примечательные виды';
				feature_desc = 'Один из наиболее примечательных местных видов живности планеты встречается только на этой территории.\
				Создайте новый вид для этой цели, используя правила, представленные ниже.\
				В некоторых случаях этот признак может указывать на наличие необычной, местной разновидности более распространенного вида.\
				Такие экземпляры обычно резко отличаются от других особей окраской, темпераментом или телосложением и могут иметь особые приспособления для лучшего использования территории,\
				на которой они обитают. Эти изменения могут быть более выраженными, чем региональные различия.\
				По усмотрению ГМа этот вид может стать источником одного из ресурсов органических соединений планеты.';
			}else if(roll > 65){
				feature = 'Предгорье';
				feature_desc = 'Большинство вершин этого горного хребта затмевает одной большой горой, которая возвышается над остальными.\
				Этот одинокий титан достаточно велик, чтобы считаться горной достопримечательностью.\
				Бонусы к тестам на Навигацию(Наземная) от этого эффекта заменяют обычные бонусы от горного хребта, а не добавляют к ним.';
			}else if(roll > 50){
				feature = 'Экстремальная температура';
				feature_desc = 'На этой территории царит экстремальная жара или холод.\
				Если планета уже имеет склонность к одной из крайностей, то эта черта накладывает дополнительный штраф -10 к проверкам на Выносливость, чтобы противостоять стихии.\
				В противном случае, чтобы противостоять экстремальным температурам на территории, необходимо пройти проверку на Выносливость (+0),\
				используя правила из раздела "Справиться с экстремальными температурами" на стр. 23. Кроме того, на территории может быть экстремальная температура, противоположная той,\
				которая характерна для остальной части планеты, например, вулканы на ледяном мире. В этом случае проверки на сопротивление типичному влиянию планеты делаются с бонусом +10,\
				пока исследователи находятся в зоне воздействия.';
			}else if(roll > 25){
				feature = 'Обширная';
				feature_desc = 'Границы этой территории значительно расширены по сравнению с типичными примерами такого типа.\
				Хотя точный размер любой территории зависит от усмотрения ГМ, территория с этим признаком обычно в два раза или более превышает размеры аналогичных регионов на данной планете.';
			}else{
				feature = 'Граница';
				feature_desc = 'Горные хребты с этим признаком являются естественными разделителями земли вокруг себя.\
				Они могут рассекать континент, разделять две территории или даже пересекать и разделять одну большую территорию.\
				Их трудно пересечь, и они даже могут быть совершенно непроходимыми.';
			}
		}while(this.terFeatures.includes(feature));
		this.terFeatures.push(feature);
		this.terFeatures_desc.push(feature_desc);
		return;
	}
	plainsTable(){
		let feature;
		let feature_desc;
		let roll = 0;
		do{
			roll = this.doubleFeat ? this.dX(95) : this.dX(100);
			if(roll > 95){
				this.doubleFeat = true;
				this.plainsTable();
				this.plainsTable();
				return;
			}else if(roll > 85){
				feature = 'Необычайное местоположение';
				feature_desc = 'В большинстве случаев территории располагаются там, где местные условия с наибольшей вероятностью создадут соответствующий базовый рельеф.\
				Леса редко встречаются в замерзших полярных регионах, и даже самые опытные исследователи считают необычным найти Пустошь, окруженную зеленеющими полями.\
				По какой-то причине эти общие правила не применяются к этой территории, которая существует там, где ей не место, и, возможно, не должна существовать.';
			}else if(roll > 70){
				feature = 'Примечательные виды';
				feature_desc = 'Один из наиболее примечательных местных видов живности планеты встречается только на этой территории.\
				Создайте новый вид для этой цели, используя правила, представленные ниже.\
				В некоторых случаях этот признак может указывать на наличие необычной, местной разновидности более распространенного вида.\
				Такие экземпляры обычно резко отличаются от других особей окраской, темпераментом или телосложением и могут иметь особые приспособления для лучшего использования территории,\
				на которой они обитают. Эти изменения могут быть более выраженными, чем региональные различия.\
				По усмотрению ГМа этот вид может стать источником одного из ресурсов органических соединений планеты.';
			}else if(roll > 45){
				feature = 'Плодородная';
				feature_desc = 'Почва здесь особенно плодородна, что позволяет местной флоре процветать и расти особенно обильно и энергично.\
				Часто в такой пышной среде появляются уникальные виды жизни, которые используют преимущества особенно благоприятной окружающей среды.\
				Такие районы также могут стать полезными сельскохозяйственными форпостами.';
			}else if(roll > 30){
				feature = 'Экстремальная температура';
				feature_desc = 'На этой территории царит экстремальная жара или холод.\
				Если планета уже имеет склонность к одной из крайностей, то эта черта накладывает дополнительный штраф -10 к проверкам на Выносливость, чтобы противостоять стихии.\
				В противном случае, чтобы противостоять экстремальным температурам на территории, необходимо пройти проверку на Выносливость (+0),\
				используя правила из раздела "Справиться с экстремальными температурами" на стр. 23. Кроме того, на территории может быть экстремальная температура, противоположная той,\
				которая характерна для остальной части планеты, например, вулканы на ледяном мире. В этом случае проверки на сопротивление типичному влиянию планеты делаются с бонусом +10,\
				пока исследователи находятся в зоне воздействия.';
			}else if(roll > 10){
				feature = 'Обширная';
				feature_desc = 'Границы этой территории значительно расширены по сравнению с типичными примерами такого типа.\
				Хотя точный размер любой территории зависит от усмотрения ГМ, территория с этим признаком обычно в два раза или более превышает размеры аналогичных регионов на данной планете.';
			}else{
				feature = 'Разбитая земля';
				feature_desc = 'В отличие от большинства равнин, эта территория имеет лишь видимость ровной земли.\
				Ее внешне ровные просторы на самом деле изрезаны мелкими трещинами, которые могут быть реликтом тектонической активности или просто побочным эффектом местных норных существ.\
				В некоторых экстремальных случаях земля нестабильна и даже склонна к обвалам.\
				Пересечение такой территории на колесном транспорте или пешком, скорее всего, будет сопряжено с катастрофой; удвойте время путешествия,\
				и по усмотрению ГМ исследователи могут в любой момент наткнуться на карстовую воронку (см. таблицу 2-10: Опасности зоны смерти на странице 61).';
			}
		}while(this.terFeatures.includes(feature));
		this.terFeatures.push(feature);
		this.terFeatures_desc.push(feature_desc);
		return;
	}
	swampTable(){
		let feature;
		let feature_desc;
		let roll = 0;
		do{
			roll = this.doubleFeat ? this.dX(95) : this.dX(100);
			if(roll > 95){
				this.doubleFeat = true;
				this.swampTable();
				this.swampTable();
				return;
			}else if(roll > 75){
				feature = 'Ядовитое';
				feature_desc = 'Болотистые водоемы здесь не просто грязные, а почти котлы чумы.\
				Приспособления, которые это вызывает у местных диких животных, делают их такими же опасными или даже хуже.\
				Просто проведя день на этой территории, нужно пройти проверку на Выносливости (+0), чтобы не получить рану, которая игнорирует бонус выносливости и броню.\
				Питье воды без тщательной очистки может привести к различным последствиям, от токсического повреждения до многомесячной лихорадки или даже безумия.\
				Все ранения, полученные на этой территории, считаются токсичными из-за риска заражения.\
				По этой же причине медицинские тесты для лечения полученных здесь травм проводятся со штрафом -20.';
			}else if(roll > 65){
				feature = 'Необычайное местоположение';
				feature_desc = 'В большинстве случаев территории располагаются там, где местные условия с наибольшей вероятностью создадут соответствующий базовый рельеф.\
				Леса редко встречаются в замерзших полярных регионах, и даже самые опытные исследователи считают необычным найти Пустошь, окруженную зеленеющими полями.\
				По какой-то причине эти общие правила не применяются к этой территории, которая существует там, где ей не место, и, возможно, не должна существовать.';
			}else if(roll > 45){
				feature = 'Застой';
				feature_desc = 'На этой территории мало жизни и еще меньше активности.\
				Если ее воды и текут, то их нелегко заметить, а немногих существ, живущих здесь, нелегко найти.\
				Это тихое, неподвижное место, плохо приспособленное для активной деятельности. Путешественники застревают в грязи, и даже транспортные средства загрязняются ею.\
				Время в пути по застойной территории удваивается, а тесты на навигацию (по поверхности) выполняются со штрафом -10.';
			}else if(roll > 30){
				feature = 'Примечательные виды';
				feature_desc = 'Один из наиболее примечательных местных видов живности планеты встречается только на этой территории.\
				Создайте новый вид для этой цели, используя правила, представленные ниже.\
				В некоторых случаях этот признак может указывать на наличие необычной, местной разновидности более распространенного вида.\
				Такие экземпляры обычно резко отличаются от других особей окраской, темпераментом или телосложением и могут иметь особые приспособления для лучшего использования территории,\
				на которой они обитают. Эти изменения могут быть более выраженными, чем региональные различия.\
				По усмотрению ГМа этот вид может стать источником одного из ресурсов органических соединений планеты.';
			}else if(roll > 10){
				feature = 'Экстремальная температура';
				feature_desc = 'На этой территории царит экстремальная жара или холод.\
				Если планета уже имеет склонность к одной из крайностей, то эта черта накладывает дополнительный штраф -10 к проверкам на Выносливость, чтобы противостоять стихии.\
				В противном случае, чтобы противостоять экстремальным температурам на территории, необходимо пройти проверку на Выносливость (+0),\
				используя правила из раздела "Справиться с экстремальными температурами" на стр. 23. Кроме того, на территории может быть экстремальная температура, противоположная той,\
				которая характерна для остальной части планеты, например, вулканы на ледяном мире. В этом случае проверки на сопротивление типичному влиянию планеты делаются с бонусом +10,\
				пока исследователи находятся в зоне воздействия.';
			}else{
				feature = 'Обширная';
				feature_desc = 'Границы этой территории значительно расширены по сравнению с типичными примерами такого типа.\
				Хотя точный размер любой территории зависит от усмотрения ГМ, территория с этим признаком обычно в два раза или более превышает размеры аналогичных регионов на данной планете.';
			}
		}while(this.terFeatures.includes(feature));
		this.terFeatures.push(feature);
		this.terFeatures_desc.push(feature_desc);
		return;
	}
	wastelandTable(){
		let feature;
		let feature_desc;
		let roll = 0;
		do{
			roll = this.doubleFeat ? this.dX(95) : this.dX(100);
			if(roll > 95){
				this.doubleFeat = true;
				this.swampTable();
				this.swampTable();
				return;
			}else if(roll > 80){
				feature = 'Необычайное местоположение';
				feature_desc = 'В большинстве случаев территории располагаются там, где местные условия с наибольшей вероятностью создадут соответствующий базовый рельеф.\
				Леса редко встречаются в замерзших полярных регионах, и даже самые опытные исследователи считают необычным найти Пустошь, окруженную зеленеющими полями.\
				По какой-то причине эти общие правила не применяются к этой территории, которая существует там, где ей не место, и, возможно, не должна существовать.';
			}else if(roll > 75){
				feature = 'Разрушенная';
				feature_desc = 'Мрачные земли этой территории - не результат естественного процесса, а раны, нанесенные внешними силами.\
				Шрам из оплавленного стекла от удара орбитального лэнс орудия или разбитые снаряды древнего заграждения намекают на то, что эта земля когда-то чего-то стоила, если не больше, то как цель.\
				Самые страшные территории такого рода пострадали не от войны или карательных ударов, а от разлитой энергии Варпа и шагов Демонов.\
				Чтобы попасть на Разрушенную территорию, часто требуется проверка на страх, сложность которой зависит от природы катаклизма, породившего ее.\
				Каждый раз, когда Исследователь получает Очки Порчи на Разрушенной территории, он получает на одно Очко Порчи больше.';
			}else if(roll > 70){
				feature = 'Примечательные виды';
				feature_desc = 'Один из наиболее примечательных местных видов живности планеты встречается только на этой территории.\
				Создайте новый вид для этой цели, используя правила, представленные ниже.\
				В некоторых случаях этот признак может указывать на наличие необычной, местной разновидности более распространенного вида.\
				Такие экземпляры обычно резко отличаются от других особей окраской, темпераментом или телосложением и могут иметь особые приспособления для лучшего использования территории,\
				на которой они обитают. Эти изменения могут быть более выраженными, чем региональные различия.\
				По усмотрению ГМа этот вид может стать источником одного из ресурсов органических соединений планеты.';
			}else if(roll > 40){
				feature = 'Экстремальная температура';
				feature_desc = 'На этой территории царит экстремальная жара или холод.\
				Если планета уже имеет склонность к одной из крайностей, то эта черта накладывает дополнительный штраф -10 к проверкам на Выносливость, чтобы противостоять стихии.\
				В противном случае, чтобы противостоять экстремальным температурам на территории, необходимо пройти проверку на Выносливость (+0),\
				используя правила из раздела "Справиться с экстремальными температурами" на стр. 23. Кроме того, на территории может быть экстремальная температура, противоположная той,\
				которая характерна для остальной части планеты, например, вулканы на ледяном мире. В этом случае проверки на сопротивление типичному влиянию планеты делаются с бонусом +10,\
				пока исследователи находятся в зоне воздействия.';
			}else if(roll > 20){
				feature = 'Обширная';
				feature_desc = 'Границы этой территории значительно расширены по сравнению с типичными примерами такого типа.\
				Хотя точный размер любой территории зависит от усмотрения ГМ, территория с этим признаком обычно в два раза или более превышает размеры аналогичных регионов на данной планете.';
			}else{
				feature = 'Опустошенная';
				feature_desc = 'Эта территория сурова и неумолима даже по меркам Пустошей. В ее пределах нет ни оазисов, ни природных источников, ни других потенциальных источников припасов.\
				Тесты на Выживание в Пустынной территории проводятся с дополнительным штрафом -10, а тесты на поиск воды автоматически проваливаются.';
			}
		}while(this.terFeatures.includes(feature));
		this.terFeatures.push(feature);
		this.terFeatures_desc.push(feature_desc);
		return;
	}
}

class Moon{
    constructor(zone, feature, ownerBody){
        this.zone       = zone;
        this.feature    = feature;
        this.body       = this.bodyGen(this.dX(10), ownerBody);
        this.gravity    = this.gravGen(this.dX(10), this.body);  
        this.atmoPres   = this.atmoPresGen(this.dX(10), this.zone, this.feature, this.gravity);
        this.atmoComp   = this.atmoCompGen(this.dX(10), this.zone, this.feature, this.atmoPres);
        this.climate    = this.climateGen(this.dX(10), this.zone, this.atmoPres);
        this.hab        = this.habGen(this.dX(10), this.feature, this.climate, this.atmoComp);
		this.landmasses = this.landGen(this.dX(10));
		this.territories= this.terrGen();
		this.resources	= this.resourceGen();
    }
    dX(number) {
        let roll = Math.floor(Math.random()*number)+1;
        return roll;
    }
    bodyGen(roll, ownerBody) {
        let body;
		roll = roll > ownerBody ? ownerBody : roll;
        if (roll >= 9){
            body = 'Огромная';
        } else if (roll == 8){
            body = 'Большая и плотная'
        } else if (roll >= 5){
            body = 'Большая'
        }else if (roll == 4){
            body = 'Маленькая и плотная'
        }else if (roll >= 2){
            body = 'Маленькая'
        } else {
            body = 'Низкая масса'
        } return body;
    }
    gravGen(roll, body) {
        let mod = 0;
        if (body === 'Огромная'){
            mod = 4;
        } else if(body === 'Большая и плотная'){
            mod = 5;
        } else if(body === 'Маленькая'){
            mod = -5;
        } else if(body === 'Низкая масса'){
            mod = -7;
        }
        const gravRoll = roll + mod;
        let grav = '';
        if(gravRoll >= 9){
            grav = 'Высокая гравитация';
        } else if (gravRoll >= 3){
            grav = 'Нормальная гравитация';
        } else if (gravRoll <= 2){
            grav = 'Низкая гравитация'
        } return grav;
    }
    // this begins where Zone and Features will be used to determine composition
    atmoPresGen(roll, zone, feature, grav){
        let atmo = '';
        let mod = 0;
        if(feature === 'Теплица' && zone === 'Основной'){
            mod += 1;
        }
        if(grav === 'Высокая гравитация'){
            mod += 1;
        }else if(grav === 'Низкая гравитация'){
            mod -= 2;
        }
        const atmoRoll = roll + mod;
        if(atmoRoll >9){
            atmo = 'Тяжелая';
        } else if (atmoRoll >4){
            atmo = 'Умеренная';
        } else if (atmoRoll >1){
            atmo = 'Тонкая';
        } else {
            atmo = 'Нету'
        } return atmo;
    }
    atmoCompGen(roll, zone, feature, atmo){
        let atmoComp = '';
        if(zone === 'Основной' && feature === 'Теплица'){
            roll +=2;
        }
        if(atmo === 'Нету'){
            roll = 0;
        }
        if(roll > 7){
            atmoComp = 'Чистая';
        } else if(roll > 4){
            atmoComp = 'Испорченная';
        } else if(roll > 2) {
            atmoComp = 'Токсичная';
        } else if(roll > 1){
            atmoComp = 'Коррозионная';
        } else if(roll == 1) {
            atmoComp = 'Смертельная';
        } else {
            atmoComp = 'Отсутствует атмосфера'
        } return atmoComp;
    }
    climateGen(roll, zone, atmo){
        let climate = '';
		
        //Determining climate with atmo by solar zone
        if(zone === 'Внутренний'){
            roll -= 6;
        }
        if(zone === 'Внешний'){
            roll += 6;
        }
        //Generally determining climate
        if(roll > 10) {
            climate = 'Ледяной мир';
        } else if(roll > 7) {
            climate = 'Холодный мир';
        } else if(roll > 3){
            climate = 'Мир с умеренным климатом';
        } else if(roll > 0) {
            climate = 'Горячий мир'
        } else {
            climate = 'Пылающий мир'
        }
        return climate;
    }
    habGen(roll, feature, climate, atmo){
        let hab = '';
        let mod = 0;
        if(feature == 'Теплица'){
            mod +2;
        }
		if (atmo !== 'Чистая' && atmo !== 'Испорченная'){
            hab = 'Не пригодна для жизни';
        } else {
            if(climate === 'Пылающий мир' || climate === 'Ледяной мир'){
                mod -= 7;
            } else if(climate === 'Горячий мир' || climate === 'Холодный мир'){
                mod -= 2;
			}

            let num = roll + mod;
			if((climate === 'Пылающий мир' || climate === 'Ледяной мир') && num > 3){
				num = 3;
			}
            if(num > 7){
                hab = 'Зеленая';
            } else if (num > 5){
                hab = 'Ограниченная экосистема';
            } else if (num > 3){
                hab = 'Только Вода';
            } else if(num > 1){
                hab = 'Подземные реки';
            } else {
                hab = 'Не пригодна для жизни';
            }
        }
        return hab;
    }
	landGen(roll){
		let targNum = 8;
		if(this.hab === 'Только Вода' || this.hab === 'Ограниченная экосистема' || this.hab === 'Зеленая'){
			targNum = 4;
		}
		if(roll >= targNum){
			return this.dX(5);
		}
		return 1;
	}
	terrGen(){
		let hab = this.hab;
		let body = this.body;
		let mod = 0;
		if(hab !== 'Ограниченная экосистема' && hab !== 'Зеленая'){
			return 'Нет Особых Территорий';
		} else if(hab === 'Зеленая'){
			mod += 2
		}
		switch(body){
			case 'Маленькая': case 'Низкая масса': case 'Маленькая и плотная':
				mod -= 2
				break;
			case 'Огромная':
				mod += 3
				break;
		}
		let elemNum = Math.max(this.dX(5) + mod, 1);
		let terrs = [];
		for(let i = 0; i < elemNum; i++){
			terrs.push(new Territories());
		}
		return terrs;
	}
	resourceGen(){
		let br_roll = 0;
		let ar_roll = 0;
		let resources_array = [];
		switch(this.body){
			case 'Маленькая': case 'Низкая масса': case 'Маленькая и плотная':
				br_roll = Math.max(this.dX(5) - 2, 0);
				ar_roll = Math.max(this.dX(5) - 3, 0);
				break;
			case 'Большая': case 'Большая и плотная':
				br_roll = this.dX(5);
				ar_roll = Math.max(this.dX(5) - 2, 0);
				break;
			case 'Огромная':
				br_roll = this.dX(10);
				ar_roll = Math.max(this.dX(5) - 1, 0);
				break;
		}
		if(br_roll == 0 && ar_roll == 0){
			return 'Отсуствуют';
		}
		if(br_roll > 0){
			for(let i = 0; i < br_roll; i++){
				resources_array.push(new Resource(this.body, 'Минералы', this.hab));
			}
		}
		if(ar_roll > 0){
			for(let i = 0; i < ar_roll; i++){
				resources_array.push(new Resource(this.body, 0,this.hab));
			}
		}
		return resources_array;
	}
}

class GasGiant{
    constructor(zone, feature){
        this.zone    = zone;
        this.feature = feature;
		this.ptype	 = 'Газового Гиганта';
		this.body_num= 0;
        this.body    = this.bodyGen(this.dX(10));
        this.gravity = this.gravGen(this.dX(10), this.body);
        this.orbFeat = this.orbFeatPop(this.orbFeatGen(this.gravity), this.gravity, this.zone, this.feature); 

    }
    dX(number) {
        let roll = Math.floor(Math.random()*number)+1;
        return roll;
    }
    bodyGen(roll){
        let body;
		this.body_num = roll;
        if(roll > 8){
            body = 'Массивный газовый гигант';
        } else if(roll > 2){
            body = 'Газовый гигант';
        } else {
            body = 'Газовый карлик';
        } return body;
    }
    gravGen(roll, body){
        let grav;
        let mod;
        if(body === 'Газовый карлик'){
            mod = -5;
        } else if(body === 'Массивный газовый гигант'){
            mod = 3;
        } else {
            mod = 0;
        }
        if(roll + mod > 9){
            grav = 'Титаничесая';
        } else if(roll + mod > 6){
            grav = 'Мощный';
        } else if(roll + mod > 2){
            grav = 'Сильная';
        } else {
            grav = 'Слабая';
        } return grav;
    }
    orbFeatGen(grav){
        let orbFeats;
        if(grav === 'Титаничесая'){
            orbFeats = ((Math.floor(Math.random()*5)+1)*3)+3;
        } else if(grav === 'Мощный'){
            orbFeats = Math.floor(Math.random()*10)+3;
        } else if(grav === 'Сильная'){
            orbFeats = Math.floor(Math.random()*7)+1;
        } else {
            orbFeats = Math.floor(Math.random()*4)+1;
        } return orbFeats;
    }
    orbFeatPop(numFeat, grav, zone, feature){
        let mod;
        let orbFeats = [];
        if(grav === 'Титаничесая'){
            mod = 30;
        } else if(grav === 'Мощный'){
            mod = 20;
        } else if(grav === 'Сильная'){
            mod = 15;
        } else {
            mod = 10;
        }
        for(let i = 0; i < numFeat; i++){
            let roll = Math.floor(Math.random()*100)+1;
            if((roll + mod) > 85){
                orbFeats.push(new Moon(zone, feature, this.body_num));
            } else if((roll + mod) > 50){
                orbFeats.push('Малая Луна');
            } else if((roll + mod) > 35) {
                orbFeats.push('Кольца (пыль)');
            } else if((roll + mod) > 20) {
                orbFeats.push('Кольца (обломки)');
            } else {
                continue;
            }
        } return orbFeats;
    }
}

// Initializes the system
const system = new System;
// Modifies the system
featureProperties(system.features);
// Displays the system
console.log(system);

function innerElemsDisplay() {
    let numElems = system.innerElements.length;
	if(numElems == 0){
		return '<li>Без особенностей';
	}
    let info = [];
	let planetsCount = 0;
    for(let i=0; i < numElems; i++){
        if(typeof system.innerElements[i] == 'string'){
            info[i] = '<li>' + system.innerElements[i];
        } else {
            let planet = system.innerElements[i];
            planetsCount++;
            if(planet.ptype === 'Планеты'){
				info[i] = '<h4>Планета: A-'+ planetsCount +'</h4><ul> <li>Размер Планеты: ' + planet.body + '<li>Сила Гравитации: '+ planet.gravity + '<li>Климат: ' + planet.climate + '<li>Атмосфера: '+ planet.atmoPres + '<li>Состав атмосферы: ' + planet.atmoComp + '<li>Пригодность для жизни: '+ planet.hab + '<li>Количество Континентов: ' + planet.landmasses;
				if(typeof planet.territories == 'string'){
					info[i] += '<li>Территории: ' + planet.territories;
				}else{
					info[i] += '<li>Территории:';
					info[i] += '<ol>';
					let terlen = planet.territories.length;
					for(let t = 0; t < terlen; t++){
						let terra = planet.territories[t];
						info[i] += '<li>' + terra.baseTerrain;
						let teffeatlen = terra.terFeatures.length;
						info[i] += '<ul>';
						for(let f = 0; f < teffeatlen; f++){
							info[i] += '<li>' + terra.terFeatures[f] + ' - ' + terra.terFeatures_desc[f];
						}
						info[i] += '</ul>';
					}
					info[i] += '</ol>';
				}
				if(typeof planet.resources == 'string'){
					info[i] += '<li>Ресурсы: ' + planet.resources;
				}else{
					info[i] += '<li>Ресурсы:';
					info[i] += '<ol>';
					let reslen = planet.resources.length;
					for(let r = 0; r < reslen; r++){
						let res = planet.resources[r];
						info[i] += '<li>' + res.resource_arch + ' - ' + res.resource + ' (' + res.abundance + ' <abbr title= "'+ res.abundance_desc +'">' + res.abundance_name + '</abbr>): ' + res.resource_desc;
					}
					info[i] += '</ol>';
				}
				info[i] += '</ul>';
			}else{
				info[i] = '<h4>Газовый Гигант: A-'+ planetsCount +'</h4><ul> <li>Размер Планеты: ' + planet.body + '<li>Сила Гравитации: ' + planet.gravity + '</ul>';
			}
			let numFeat = planet.orbFeat.length;
			if(numFeat > 1){
				info[i] += '<h5> ' + planet.ptype + ' А-'+ planetsCount +'</h5><ul>'
				let moonsNum = 0;
				for(let p = 0; p < numFeat; p++){
					if(typeof planet.orbFeat[p] == 'string'){
						info[i] += '<li>' + planet.orbFeat[p];
					}else{
						let moona = planet.orbFeat[p];
						moonsNum++
						info[i] += '<h5>'+ moonsNum +'-я Луна ' + planet.ptype + ' A-'+ planetsCount +'</h5><ul> <li>Размер Луны: ' + moona.body + '<li>Сила Гравитации: '+ moona.gravity + '<li>Климат: ' + moona.climate + '<li>Атмосфера: '+ moona.atmoPres + '<li>Состав атмосферы: ' + moona.atmoComp + '<li>Пригодность для жизни: '+ moona.hab + '<li>Количество Континентов: ' + moona.landmasses;
						if(typeof moona.territories == 'string'){
							info[i] += '<li>Территории: ' + moona.territories;
						}else{
							info[i] += '<li>Территории:';
							info[i] += '<ol>';
							let terlen = moona.territories.length;
							for(let t = 0; t < terlen; t++){
								let terra = moona.territories[t];
								info[i] += '<li>' + terra.baseTerrain;
								let teffeatlen = terra.terFeatures.length;
								info[i] += '<ul>';
								for(let f = 0; f < teffeatlen; f++){
									info[i] += '<li>' + terra.terFeatures[f] + ' - ' + terra.terFeatures_desc[f];
								}
								info[i] += '</ul>';
							}
							info[i] += '</ol>';
						}if(typeof moona.resources == 'string'){
							info[i] += '<li>Ресурсы: ' + moona.resources;
						}else{
							info[i] += '<li>Ресурсы:';
							info[i] += '<ol>';
							let reslen = moona.resources.length;
							for(let r = 0; r < reslen; r++){
								let res = moona.resources[r];
								info[i] += '<li>' + res.resource_arch + ' - ' + res.resource + ' (' + res.abundance + ' <abbr title= "'+ res.abundance_desc +'">' + res.abundance_name + '</abbr>): ' + res.resource_desc;
							}
							info[i] += '</ol>';
						}
						info[i] += '</ul><br>'
					}
				}
				info[i] += '</ul>'
			}
        }
        
    }
    return info.toString();
}
function primaryElemsDisplay() {
    let numElems = system.primaryElements.length;
	if(numElems == 0){
		return '<li>Без особенностей';
	}
    let info = [];
	let planetsCount = 0;
    for(let i=0; i < numElems; i++){
        if(typeof system.primaryElements[i] == 'string'){
            info[i] = '<li>' + system.primaryElements[i];
        } else {
            let planet = system.primaryElements[i];
			planetsCount++;
            if(planet.ptype === 'Планеты'){
				info[i] = '<h4>Планета: Б-'+ planetsCount +'</h4><ul> <li>Размер Планеты: ' + planet.body + '<li>Сила Гравитации: '+ planet.gravity + '<li>Климат: ' + planet.climate + '<li>Атмосфера: '+ planet.atmoPres + '<li>Состав атмосферы: ' + planet.atmoComp + '<li>Пригодность для жизни: '+ planet.hab + '<li>Количество Континентов: ' + planet.landmasses;
				if(typeof planet.territories == 'string'){
					info[i] += '<li>Территории: ' + planet.territories;
				}else{
					info[i] += '<li>Территории:';
					info[i] += '<ol>';
					let terlen = planet.territories.length;
					for(let t = 0; t < terlen; t++){
						let terra = planet.territories[t];
						info[i] += '<li>' + terra.baseTerrain;
						let teffeatlen = terra.terFeatures.length;
						info[i] += '<ul>';
						for(let f = 0; f < teffeatlen; f++){
							info[i] += '<li>' + terra.terFeatures[f] + ' - ' + terra.terFeatures_desc[f];
						}
						info[i] += '</ul>';
					}
					info[i] += '</ol>';
				}
				if(typeof planet.resources == 'string'){
					info[i] += '<li>Ресурсы: ' + planet.resources;
				}else{
					info[i] += '<li>Ресурсы:';
					info[i] += '<ol>';
					let reslen = planet.resources.length;
					for(let r = 0; r < reslen; r++){
						let res = planet.resources[r];
						info[i] += '<li>' + res.resource_arch + ' - ' + res.resource + ' (' + res.abundance + ' <abbr title= "'+ res.abundance_desc +'">' + res.abundance_name + '</abbr>): ' + res.resource_desc;
					}
					info[i] += '</ol>';
				}
				info[i] += '</ul>';
			}else{
				info[i] = '<h4>Газовый Гигант: Б-'+ planetsCount +'</h4><ul> <li>Размер Планеты: ' + planet.body + '<li>Сила Гравитации: ' + planet.gravity + '</ul>';
			}
			let numFeat = planet.orbFeat.length;
			if(numFeat > 1){
				info[i] += '<h5>Орбита ' + planet.ptype + ' Б-'+ planetsCount +'</h5><ul>'
				let moonsNum = 0;
				for(let p = 0; p < numFeat; p++){
					if(typeof planet.orbFeat[p] == 'string'){
						info[i] += '<li>' + planet.orbFeat[p];
					}else{
						let moona = planet.orbFeat[p];
						moonsNum++
						info[i] += '<h5>'+ moonsNum +'-я Луна ' + planet.ptype + ' Б-'+ planetsCount +'</h5><ul> <li>Размер Луны: ' + moona.body + '<li>Сила Гравитации: '+ moona.gravity + '<li>Климат: ' + moona.climate + '<li>Атмосфера: '+ moona.atmoPres + '<li>Состав атмосферы: ' + moona.atmoComp + '<li>Пригодность для жизни: '+ moona.hab + '<li>Количество Континентов: ' + moona.landmasses;
						if(typeof moona.territories == 'string'){
							info[i] += '<li>Территории: ' + moona.territories;
						}else{
							info[i] += '<li>Территории:';
							info[i] += '<ol>';
							let terlen = moona.territories.length;
							for(let t = 0; t < terlen; t++){
								let terra = moona.territories[t];
								info[i] += '<li>' + terra.baseTerrain;
								let teffeatlen = terra.terFeatures.length;
								info[i] += '<ul>';
								for(let f = 0; f < teffeatlen; f++){
									info[i] += '<li>' + terra.terFeatures[f] + ' - ' + terra.terFeatures_desc[f];
								}
								info[i] += '</ul>';
							}
							info[i] += '</ol>';
						}if(typeof moona.resources == 'string'){
							info[i] += '<li>Ресурсы: ' + moona.resources;
						}else{
							info[i] += '<li>Ресурсы:';
							info[i] += '<ol>';
							let reslen = moona.resources.length;
							for(let r = 0; r < reslen; r++){
								let res = moona.resources[r];
								info[i] += '<li>' + res.resource_arch + ' - ' + res.resource + ' (' + res.abundance + ' <abbr title= "'+ res.abundance_desc +'">' + res.abundance_name + '</abbr>): ' + res.resource_desc;
							}
							info[i] += '</ol>';
						}
						info[i] += '</ul><br>'
					}
				}
				info[i] += '</ul>'
			}
		}
        
    }
    return info.toString();
}
function outerElemsDisplay() {
    let numElems = system.outerElements.length;
	if(numElems == 0){
		return '<li>Без особенностей';
	}
    let info = [];
	let planetsCount = 0;
    for(let i=0; i < numElems; i++){
        if(typeof system.outerElements[i] == 'string'){
            info[i] = '<li>' + system.outerElements[i];
        } else {
            let planet = system.outerElements[i];
			planetsCount++;
            if(planet.ptype === 'Планеты'){
				info[i] = '<h4>Планета: В-'+ planetsCount +'</h4><ul> <li>Размер Планеты: ' + planet.body + '<li>Сила Гравитации: '+ planet.gravity + '<li>Климат: ' + planet.climate + '<li>Атмосфера: '+ planet.atmoPres + '<li>Состав атмосферы: ' + planet.atmoComp + '<li>Пригодность для жизни: '+ planet.hab + '<li>Количество Континентов: ' + planet.landmasses;
				if(typeof planet.territories == 'string'){
					info[i] += '<li>Территории: ' + planet.territories;
				}else{
					info[i] += '<li>Территории:';
					info[i] += '<ol>';
					let terlen = planet.territories.length;
					for(let t = 0; t < terlen; t++){
						let terra = planet.territories[t];
						info[i] += '<li>' + terra.baseTerrain;
						let teffeatlen = terra.terFeatures.length;
						info[i] += '<ul>';
						for(let f = 0; f < teffeatlen; f++){
							info[i] += '<li>' + terra.terFeatures[f] + ' - ' + terra.terFeatures_desc[f];
						}
						info[i] += '</ul>';
					}
					info[i] += '</ol>';
				}
				if(typeof planet.resources == 'string'){
					info[i] += '<li>Ресурсы: ' + planet.resources;
				}else{
					info[i] += '<li>Ресурсы:';
					info[i] += '<ol>';
					let reslen = planet.resources.length;
					for(let r = 0; r < reslen; r++){
						let res = planet.resources[r];
						info[i] += '<li>' + res.resource_arch + ' - ' + res.resource + ' (' + res.abundance + ' <abbr title= "'+ res.abundance_desc +'">' + res.abundance_name + '</abbr>): ' + res.resource_desc;
					}
					info[i] += '</ol>';
				}
				info[i] += '</ul>';
			}else{
				info[i] = '<h4>Газовый Гигант: В-'+ planetsCount +'</h4><ul> <li>Размер Планеты: ' + planet.body + '<li>Сила Гравитации: ' + planet.gravity + '</ul>';
			}
			let numFeat = planet.orbFeat.length;
			if(numFeat > 1){
				info[i] += '<h5>Орбита ' + planet.ptype + ' В-'+ planetsCount +'</h5><ul>'
				let moonsNum = 0;
				for(let p = 0; p < numFeat; p++){
					if(typeof planet.orbFeat[p] == 'string'){
						info[i] += '<li>' + planet.orbFeat[p];
					}else{
						let moona = planet.orbFeat[p];
						moonsNum++
						info[i] += '<h5>'+ moonsNum +'-я Луна ' + planet.ptype + ' В-'+ planetsCount +'</h5><ul> <li>Размер Луны: ' + moona.body + '<li>Сила Гравитации: '+ moona.gravity + '<li>Климат: ' + moona.climate + '<li>Атмосфера: '+ moona.atmoPres + '<li>Состав атмосферы: ' + moona.atmoComp + '<li>Пригодность для жизни: '+ moona.hab + '<li>Количество Континентов: ' + moona.landmasses;
						if(typeof moona.territories == 'string'){
							info[i] += '<li>Территории: ' + moona.territories;
						}else{
							info[i] += '<li>Территории:';
							info[i] += '<ol>';
							let terlen = moona.territories.length;
							for(let t = 0; t < terlen; t++){
								let terra = moona.territories[t];
								info[i] += '<li>' + terra.baseTerrain;
								let teffeatlen = terra.terFeatures.length;
								info[i] += '<ul>';
								for(let f = 0; f < teffeatlen; f++){
									info[i] += '<li>' + terra.terFeatures[f] + ' - ' + terra.terFeatures_desc[f];
								}
								info[i] += '</ul>';
							}
							info[i] += '</ol>';
						}if(typeof moona.resources == 'string'){
							info[i] += '<li>Ресурсы: ' + moona.resources;
						}else{
							info[i] += '<li>Ресурсы:';
							info[i] += '<ol>';
							let reslen = moona.resources.length;
							for(let r = 0; r < reslen; r++){
								let res = moona.resources[r];
								info[i] += '<li>' + res.resource_arch + ' - ' + res.resource + ' (' + res.abundance + ' <abbr title= "'+ res.abundance_desc +'">' + res.abundance_name + '</abbr>): ' + res.resource_desc;
							}
							info[i] += '</ol>';
						}
						info[i] += '</ul><br>'
					}
				}
				info[i] += '</ul>'
			}
		}
        
    }
    return info.toString();
}
function starsDisplay() {
	let info = ''
	let numElems = system.star.length;
	if(numElems == 0){
		return 'Без Зведы';
	}else if(numElems == 2){
		info = '<abbr title= "'+ system.star_desc[0] +'">' + system.star[0] + '</abbr>, <abbr title= "'+ system.star_desc[1] +'">' + system.star[1] + '</abbr>.'
	}else{
		info += '<abbr title= "'+ system.star_desc[0] +'">' + system.star[0] + '</abbr>.'
	}
	return info
}

function featuresDisplay() {
	let info = ''
	let numElems = system.features.length;
	for(let i=0; i < numElems; i++){
		info += ' <h3>' + system.features[i] + '</h3>'
		info += system.features_desc[i]
	}
	return info
}

document.getElementById('star').innerHTML = 'Звезда: ' + starsDisplay();
document.getElementById('feature').innerHTML = '<h2>Особенности:<h2>' + featuresDisplay();
document.getElementById('innerElems').innerHTML ='<h3>Елементы Внутренней Зоны</h3><ul>' + innerElemsDisplay() + '</ul>';
document.getElementById('primaryElems').innerHTML ='<h3>Елементы Основной Зоны</h3><ul>' + primaryElemsDisplay() + '</ul>';
document.getElementById('outerElems').innerHTML ='<h3>Елементы Внешнней Зоны</h3><ul>' + outerElemsDisplay() + '</ul>';
document.getElementById('JSON').innerHTML = JSON.stringify(system);